{"version":3,"sources":["data.js","components/Team.js","App.js","serviceWorker.js","index.js"],"names":["skills","x","player","quantity","position","cost","ma","st","ag","pa","av","primary","secondary","roster","name","players","reRollsCost","apothecaryAllowed","rosters","value","Team","state","budget","coach","reRolls","dedicatedFans","assistantCoaches","cheerleaders","apothecary","Array","fill","map","setRoster","roster_index","setState","setPlayer","player_number","player_position","p","setPlayerName","player_name","getTeamValue","tv","reduce","total","getTreasury","formatCost","toString","replace","Container","Tabs","defaultActiveKey","Tab","eventKey","title","Row","Col","md","Table","borderless","size","className","Form","Control","type","this","onChange","e","target","as","i","readOnly","Math","min","max","parseInt","defaultValue","plaintext","bordered","hover","id","join","Component","App","xmlns","width","height","viewBox","d","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.23215cc4.chunk.js","sourcesContent":["const skills = {\n  // agility\n  catch: 'Catch',\n  divingCatch: 'Diving Catch',\n  divingTackle: 'Diving Tackle',\n  dodge: 'Dodge',\n  defensive: 'Defensive',\n  jumpUp: 'Jump Up',\n  leap: 'Leap',\n  safePairOfHands: 'Safe Pair of Hands',\n  sideStep: 'Side Step',\n  sneakyGit: 'Sneaky Git',\n  sprint: 'Sprint',\n  sureFeet: 'Sure Feet',\n  // general\n  block: 'Block',\n  dauntless: 'Dauntless',\n  dirtyPlayer: 'Dirty Player',\n  fend: 'Fend',\n  frenzy: 'Frenzy',\n  kick: 'Kick',\n  pro: 'Pro',\n  shadowing: 'Shadowing',\n  stripBall: 'Strip Ball',\n  sureHands: 'Sure Hands',\n  tackle: 'Tackle',\n  wrestle: 'Wrestle',\n  // mutation\n  bigHand: 'Big Hand',\n  claws: 'Claws',\n  disturbingPresence: 'Disturbing Presence',\n  extraArms: 'Extra Arms',\n  foulAppearance: 'Foul Appearance',\n  horns: 'Horns',\n  ironHardSkin: 'Iron Hard Skin',\n  monstrousMouth: 'Monstrous Mouth',\n  prehensileTail: 'Prehensile Tail',\n  tentacles: 'Tentacles',\n  twoHeads: 'Two Heads',\n  veryLongLegs: 'Very Long Legs',\n  // passing\n  accurate: 'Accurate',\n  cannoneer: 'Cannoneer',\n  cloudBurster: 'Cloud Burster',\n  dumpOff: 'Dump-off',\n  fumblerooskie: 'Fumblerooskie',\n  hailMaryPass: 'Hail Mary Pass',\n  leader: 'Leader',\n  nervesOfSteel: 'Nerves of Steel',\n  onTheBall: 'On the Ball',\n  pass: 'Pass',\n  runningPass: 'Running Pass',\n  safePass: 'Safe Pass',\n  // strength\n  armBar: 'Arm Bar',\n  brawler: 'Brawler',\n  breakTackle: 'Break Tackle',\n  grab: 'Grab',\n  guard: 'Guard',\n  juggernaut: 'Juggernaut',\n  mightyBlow: (x) => 'Mighty Blow (+' + x + ')',\n  multipleBlock: 'Multiple Block',\n  pileDriver: 'Pile Driver',\n  standFirm: 'Stand Firm',\n  strongArm: 'Strong Arm',\n  thickSkull: 'Thick Skull',\n  // traits\n  animalSavagery: 'Animal Savagery',\n  animosity: (x) => 'Animosity (' + x + ')',\n  alwaysHungry: 'Always Hungry',\n  ballAndChain: 'Ball & Chain',\n  bombardier: 'Bombardier',\n  boneHead: 'Bone Head',\n  chainsaw: 'Chainsaw',\n  decay: 'Decay',\n  hypnoticGaze: 'Hypnotic Gaze',\n  kickTeamMate: 'Kick Team Mate',\n  loner: (x) => 'Loner (' + x + '+)',\n  noHands: 'No Hands',\n  plagueRidden: 'Plague Ridden',\n  pogoStick: 'Pogo Stick',\n  projectileVomit: 'Projectile Vomit',\n  reallyStupid: 'Really Stupid',\n  regeneration: 'Regeneration',\n  rightStuff: 'Right Stuff',\n  secretWeapon: 'Secret Weapon',\n  stab: 'Stab',\n  stunty: 'Stunty',\n  swarming: 'Swarming',\n  swoop: 'Swoop',\n  takeRoop: 'Take Root',\n  titchy: 'Titchy',\n  timmmber: 'Timmm-ber!',\n  throwTeamMate: 'Throw Team-mate',\n  unchannelledFury: 'Unchannelled Fury'\n}\n\n\nconst player = (quantity, position, cost, ma, st, ag, pa, av, skills, primary, secondary) => {\n  return {\n    quantity: quantity,\n    position: position,\n    cost: cost,\n    ma: ma,\n    st: st,\n    ag: ag,\n    pa: pa,\n    av: av,\n    skills: skills,\n    primary: primary,\n    secondary: secondary,\n  }\n}\n\n\nconst roster = (name, players, reRollsCost, apothecaryAllowed) => {\n  return {\n    name: name,\n    players: players,\n    reRollsCost: reRollsCost,\n    apothecaryAllowed: apothecaryAllowed,\n  }\n}\n\n\nconst rosters = [\n  roster(\n    'Human',\n    [\n      player(16, 'Lineman', 50000, 6, 3, 3, 4, 9, [], 'G', 'AS'),\n      player(2, 'Thrower', 80000, 6, 3, 3, 2, 9, [skills.pass, skills.sureHands], 'GP', 'AS'),\n      player(4, 'Catcher', 65000, 8, 2, 3, 5, 8, [skills.catch, skills.dodge], 'AG', 'SP'),\n      player(4, 'Blitzer', 85000, 7, 3, 3, 4, 9, [skills.block], 'GS', 'AP'),\n      player(3, 'Halfling Hopeful', 30000, 5, 2, 3, 4, 7, [skills.dodge, skills.rightStuff, skills.stunty], 'A', 'GS'),\n      player(1, 'Ogre', 140000, 5, 5, 4, 5, 10, [skills.boneHead, skills.loner(4), skills.mightyBlow(1), skills.thickSkull, skills.throwTeamMate], 'S', 'AG')\n    ],\n    50000,\n    true,\n  ),\n  roster(\n    'Orc',\n    [\n      player(16, 'Lineman', 50000, 5, 3, 3, 4, 10, [skills.animosity('Orc Linemen')], 'G', 'AS'),\n      player(2, 'Thrower', 65000, 5, 3, 3, 3, 9, [skills.animosity('all team-mates'), skills.pass, skills.sureHands], 'GP', 'AS'),\n      player(4, 'Blitzer', 80000, 6, 3, 3, 4, 10, [skills.animosity('all team-mates'), skills.block], 'GS', 'AP'),\n      player(4, 'Big Un Blocker', 90000, 5, 4, 4, '-', 10, [skills.animosity('Big Un Blockers')], 'GS', 'A'),\n      player(4, 'Goblin', 40000, 6, 2, 3, 4, 8, [skills.dodge, skills.rightStuff, skills.stunty], 'A', 'GS'),\n      player(1, 'Untrained Troll', 115000, 4, 5, 5, 5, 10, [skills.alwaysHungry, skills.loner(4), skills.mightyBlow(1), skills.projectileVomit, skills.reallyStupid, skills.regeneration, skills.throwTeamMate], 'S', 'AGP')\n    ],\n    60000,\n    true,\n  )\n]\n\nexport default rosters;\n","import React, {Component} from 'react';\n\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Tab from 'react-bootstrap/Tab'\nimport Table from 'react-bootstrap/Table'\nimport Tabs from 'react-bootstrap/Tabs'\nimport Form from 'react-bootstrap/Form'\n\nimport rosters from '../data'\n\n\n// A player in the player list\nconst player = (name, position, ma, st, ag, pa, av, skills, value) => {\n  return {\n    name: name,\n    position: position,\n    ma: ma,\n    st: st,\n    ag: ag,\n    pa: pa,\n    av: av,\n    skills: skills,\n    value: value\n  }\n}\n\n\nclass Team extends Component {\n\n  state = {\n    budget: 1000000,\n    name: '',\n    roster: rosters[0],\n    coach: '',\n    reRolls: 0,\n    dedicatedFans: 0,\n    assistantCoaches: 0,\n    cheerleaders: 0,\n    apothecary: 0,\n    players: new Array(16).fill(null).map((x) => player())\n  }\n\n  setRoster = (roster_index) => {\n    // Select a team roster\n    this.setState({\n      roster: rosters[roster_index],\n      reRolls: 0,\n      dedicatedFans: 0,\n      assistantCoaches: 0,\n      cheerleaders: 0,\n      apothecary: 0,\n      players: new Array(16).fill(null).map((x) => player())\n    });\n  }\n\n  setPlayer = (player_number, player_position) => {\n    // Set a player in the player list\n    // Note: inputs player_number and player_position are one-indexed\n    let players = this.state.players;\n    if (player_position === 0) {\n      // No position is selected: insert empty player\n      players[player_number-1] = player(players[player_number-1].name);\n    } else {\n      // Position is selected: insert player\n      let p = this.state.roster.players[player_position-1];\n      players[player_number-1] = player(players[player_number-1].name, player_position, p.ma, p.st, p.ag, p.pa, p.av, p.skills, p.cost);\n    }\n    this.setState({players: players})\n  }\n\n  setPlayerName = (player_number, player_name) => {\n    // Set the name of a player in the player list\n    let players = this.state.players;\n    players[player_number-1].name = player_name;\n    this.setState({players: players});\n  }\n\n  getTeamValue = () => {\n    // Compute the current team value\n    let tv = 0;\n    tv += this.state.reRolls * this.state.roster.reRollsCost;\n    tv += this.state.dedicatedFans * 10000;\n    tv += this.state.assistantCoaches * 10000;\n    tv += this.state.cheerleaders * 10000;\n    tv += this.state.apothecary * 50000;\n    tv += this.state.players.reduce((total, player) => {return total + (player.value || 0)}, 0);\n    return tv;\n  }\n\n  getTreasury = () => {\n    // Compute the current treasury value\n    return this.state.budget - this.getTeamValue();\n  }\n\n  formatCost = (x) => {\n    // Format a number into a cost string, example: 10000 -> 10,000 GP\n    return `${x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")} GP`;\n  }\n\n  render() {\n    return (\n      <Container>\n\n        <Tabs defaultActiveKey=\"team\">\n          <Tab eventKey=\"team\" title=\"Team\">\n            <Row>\n              <Col md=\"5\">\n                <Table borderless size=\"sm\" className=\"margin-zero team-table-1\">\n                  <tbody>\n                    <tr>\n                      <td>Team Name:</td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-center\" value={this.state.name} onChange={(e) => this.setState({name: e.target.value})} /></td>\n                    </tr>\n                    <tr>\n                      <td>Team Roster:</td>\n                      <td>\n                        <Form.Control as=\"select\" size=\"sm\" onChange={(e) => this.setRoster(e.target.value)}>\n                         {rosters.map((roster, i) => {return <option key={i} value={i}>{roster.name}</option>})}\n                        </Form.Control>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>Coach:</td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-center\" value={this.state.coach} onChange={(e) => this.setState({coach: e.target.value})} /></td>\n                    </tr>\n                    <tr>\n                      <td>Treasury:</td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.getTreasury())} readOnly /></td>\n                    </tr>\n                    <tr>\n                      <td>Team Value:</td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.getTeamValue())} readOnly /></td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n              <Col md=\"7\">\n                <Table borderless size=\"sm\" className=\"margin-zero team-table-2\">\n                  <tbody>\n                    <tr>\n                      <td>Team re-rolls:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" value={this.state.reRolls} onChange={(e) => this.setState({reRolls: Math.min(Math.max(parseInt(e.target.value) || 0, 0), 8)})} /></td>\n                      <td>x</td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.state.roster.reRollsCost)} readOnly /></td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.state.reRolls * this.state.roster.reRollsCost)} readOnly /></td>\n                    </tr>\n                    <tr>\n                      <td>Dedicated Fans:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" value={this.state.dedicatedFans} onChange={(e) => this.setState({dedicatedFans: Math.max(parseInt(e.target.value) || 0, 0)})} /></td>\n                      <td>x</td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" defaultValue={this.formatCost(10000)} plaintext readOnly /></td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.state.dedicatedFans * 10000)} readOnly /></td>\n                    </tr>\n                    <tr>\n                      <td>Assistant Coaches:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" value={this.state.assistantCoaches} onChange={(e) => this.setState({assistantCoaches: Math.max(parseInt(e.target.value) || 0, 0)})} /></td>\n                      <td>x</td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" defaultValue={this.formatCost(10000)} plaintext readOnly /></td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.state.assistantCoaches * 10000)} readOnly /></td>\n                    </tr>\n                    <tr>\n                      <td>Cheerleaders:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" value={this.state.cheerleaders} onChange={(e) => this.setState({cheerleaders: Math.max(parseInt(e.target.value) || 0, 0)})} /></td>\n                      <td>x</td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" defaultValue={this.formatCost(10000)} plaintext readOnly /></td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.state.cheerleaders * 10000)} readOnly /></td>\n                    </tr>\n                    <tr>\n                      <td>Apothecary:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" value={this.state.apothecary} onChange={(e) => this.setState({apothecary: Math.min(Math.max(parseInt(e.target.value) || 0, 0), 1)})} readOnly={!this.state.roster.apothecaryAllowed} /></td>\n                      <td>x</td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" defaultValue={this.formatCost(50000)} plaintext readOnly /></td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.state.apothecary * 50000)} readOnly /></td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </Tab>\n          <Tab eventKey=\"budget\" title=\"Budget\">\n            <Row>\n              <Col md=\"5\">\n                <Table borderless size=\"sm\" className=\"margin-zero budget-table\">\n                  <tbody>\n                    <tr>\n                      <td>Budget:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.budget} onChange={(e) => this.setState({budget: e.target.value})} /></td>\n                      <td>GP</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </Tab>\n        </Tabs>\n\n        <Row>\n          <Col>\n            <Table bordered hover size=\"sm\" className=\"player-table table-striped\">\n              <thead>\n                <tr>\n                  <th className=\"text-center\"></th>\n                  <th className=\"text-left\">Name</th>\n                  <th className=\"text-left\">Position</th>\n                  <th className=\"text-center\">MA</th>\n                  <th className=\"text-center\">ST</th>\n                  <th className=\"text-center\">AG</th>\n                  <th className=\"text-center\">PA</th>\n                  <th className=\"text-center\">AV</th>\n                  <th className=\"text-left\">Skills</th>\n                  <th className=\"text-center\">Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.players.map((player, i) => {\n                  return (<tr key={i+1}>\n                    <td className=\"player-number\">{i+1}</td>\n                    <td className=\"player-name\"><Form.Control type=\"text\" id={i+1} plaintext value={player.name || \"\"} onChange={(e) => this.setPlayerName(parseInt(e.target.id), e.target.value)} /></td>\n                    <td className=\"player-position\">\n                      <Form.Control as=\"select\" id={i+1} size=\"sm\" plaintext value={player.position || 0} onChange={(e) => this.setPlayer(parseInt(e.target.id), parseInt(e.target.value))}>\n                        <option key=\"0\" value=\"0\">-</option>\n                        {this.state.roster.players.map((p, i) => {return <option key={i+1} value={i+1}>{p.position}</option>})}\n                      </Form.Control>\n                    </td>\n                    <td className=\"player-ma\">{player.ma}</td>\n                    <td className=\"player-st\">{player.st}</td>\n                    <td className=\"player-ag\">{player.ag}</td>\n                    <td className=\"player-pa\">{player.pa}</td>\n                    <td className=\"player-av\">{player.av}</td>\n                    <td className=\"player-skills\">{player.skills && player.skills.join(\", \")}</td>\n                    <td className=\"player-value\">{player.value && this.formatCost(player.value)}</td>\n                  </tr>)\n                })}\n              </tbody>\n            </Table>\n          </Col>\n        </Row>\n\n      </Container>\n    )\n  }\n}\n\nexport default Team;\n","import React from 'react';\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Team from './components/Team';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <Container><Row><Col id=\"header\">Team Draft List</Col></Row></Container>\n      </header>\n      <main>\n        <Team />\n      </main>\n      <footer>\n        <Container>\n          <Row>\n            <Col>\n              <p>~ Nuflheim ~</p>\n              <p>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill=\"currentColor\" className=\"bi bi-star-fill\" viewBox=\"0 0 16 16\"><path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"/></svg> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-star-fill\" viewBox=\"0 0 16 16\"><path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"/></svg> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill=\"currentColor\" className=\"bi bi-star-fill\" viewBox=\"0 0 16 16\"><path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"/></svg>\n              </p>\n            </Col>\n          </Row>\n        </Container>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}