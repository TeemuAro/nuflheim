{"version":3,"sources":["data.js","components/Team.js","App.js","serviceWorker.js","index.js"],"names":["skills","x","positional","quantity","position","cost","ma","st","ag","pa","av","primaryAccess","secondaryAccess","roster","name","positionals","costOfReRolls","apothecaryAllowed","tier","rosters","player","positionNumber","positionName","value","maMod","stMod","agMod","paMod","avMod","primarySkills","secondarySkills","Team","state","budget","costMultiplierReRolls","costOfAssistantCoaches","costOfCheerleaders","costOfDedicatedFans","costOfApothecary","playerAdvancementsCostGold","customisePlayerAdvancementCosts","costOfPrimarySkill","costOfSecondarySkill","costOfAV","costOfMA","costOfPA","costOfAG","costOfST","coach","reRolls","dedicatedFans","assistantCoaches","cheerleaders","apothecary","players","Array","fill","map","showPlayerAdvancementModal","selectedPlayerNumber","loadTeam","JSON","parse","window","localStorage","getItem","rosterName","setState","from","document","querySelector","options","forEach","option_element","option_text","text","option_value","getElementById","saveTeam","stringify","setItem","setRoster","rosterIndex","setRulesPresetStandard","setRulesPresetSevens","getCostOfReRolls","Math","round","setPlayer","playerNumber","p","activeElement","blur","onSetPlayerOpen","i","length","textContent","onSetPlayerClose","setPlayerName","playerName","getSelectedPlayer","setSelectedPlayer","renderPlayerSkills","s","className","concat","renderPlayerChar","char","interactive","mod","includes","toggleSelectedPlayerChar","playerCharMayBeImproved","renderSkill","skill","category","onClick","removeSkill","addSkill","push","sort","filter","getPlayerValue","getTeamValue","tv","reduce","total","getTreasury","treasury","formatCost","toString","replace","toggleCustomisePlayerAdvancementCosts","Container","Tabs","defaultActiveKey","Tab","eventKey","title","Row","Col","md","Table","borderless","size","Form","Control","type","this","onChange","e","target","id","as","readOnly","min","max","parseInt","plaintext","Button","variant","Number","MAX_SAFE_INTEGER","Check","inline","defaultChecked","bordered","hover","onFocus","children","onBlur","Modal","show","onHide","animation","aria-labelledby","centered","Header","closeButton","Title","Body","Component","ReactGA","initialize","pageview","location","href","App","rel","xmlns","width","height","viewBox","d","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e419c87c.chunk.js","sourcesContent":["const skills = {\r\n  // Agility\r\n  catch: \"Catch\",\r\n  divingCatch: \"Diving Catch\",\r\n  divingTackle: \"Diving Tackle\",\r\n  dodge: \"Dodge\",\r\n  defensive: \"Defensive\",\r\n  jumpUp: \"Jump Up\",\r\n  leap: \"Leap\",\r\n  safePairOfHands: \"Safe Pair of Hands\",\r\n  sideStep: \"Side Step\",\r\n  sneakyGit: \"Sneaky Git\",\r\n  sprint: \"Sprint\",\r\n  sureFeet: \"Sure Feet\",\r\n  // General\r\n  block: \"Block\",\r\n  dauntless: \"Dauntless\",\r\n  dirtyPlayer: (x) => \"Dirty Player (+\" + x + \")\",\r\n  fend: \"Fend\",\r\n  frenzy: \"Frenzy\",\r\n  kick: \"Kick\",\r\n  pro: \"Pro\",\r\n  shadowing: \"Shadowing\",\r\n  stripBall: \"Strip Ball\",\r\n  sureHands: \"Sure Hands\",\r\n  tackle: \"Tackle\",\r\n  wrestle: \"Wrestle\",\r\n  // Mutation\r\n  bigHand: \"Big Hand\",\r\n  claws: \"Claws\",\r\n  disturbingPresence: \"Disturbing Presence\",\r\n  extraArms: \"Extra Arms\",\r\n  foulAppearance: \"Foul Appearance\",\r\n  horns: \"Horns\",\r\n  ironHardSkin: \"Iron Hard Skin\",\r\n  monstrousMouth: \"Monstrous Mouth\",\r\n  prehensileTail: \"Prehensile Tail\",\r\n  tentacles: \"Tentacles\",\r\n  twoHeads: \"Two Heads\",\r\n  veryLongLegs: \"Very Long Legs\",\r\n  // Passing\r\n  accurate: \"Accurate\",\r\n  cannoneer: \"Cannoneer\",\r\n  cloudBurster: \"Cloud Burster\",\r\n  dumpOff: \"Dump-off\",\r\n  fumblerooskie: \"Fumblerooskie\",\r\n  hailMaryPass: \"Hail Mary Pass\",\r\n  leader: \"Leader\",\r\n  nervesOfSteel: \"Nerves of Steel\",\r\n  onTheBall: \"On the Ball\",\r\n  pass: \"Pass\",\r\n  runningPass: \"Running Pass\",\r\n  safePass: \"Safe Pass\",\r\n  // Strength\r\n  armBar: \"Arm Bar\",\r\n  brawler: \"Brawler\",\r\n  breakTackle: \"Break Tackle\",\r\n  grab: \"Grab\",\r\n  guard: \"Guard\",\r\n  juggernaut: \"Juggernaut\",\r\n  mightyBlow: (x) => \"Mighty Blow (+\" + x + \")\",\r\n  multipleBlock: \"Multiple Block\",\r\n  pileDriver: \"Pile Driver\",\r\n  standFirm: \"Stand Firm\",\r\n  strongArm: \"Strong Arm\",\r\n  thickSkull: \"Thick Skull\",\r\n  // Traits\r\n  animalSavagery: \"Animal Savagery\",\r\n  animosity: (x) => \"Animosity (\" + x + \")\",\r\n  alwaysHungry: \"Always Hungry\",\r\n  ballAndChain: \"Ball & Chain\",\r\n  bombardier: \"Bombardier\",\r\n  boneHead: \"Bone Head\",\r\n  chainsaw: \"Chainsaw\",\r\n  decay: \"Decay\",\r\n  hypnoticGaze: \"Hypnotic Gaze\",\r\n  kickTeamMate: \"Kick Team Mate\",\r\n  loner: (x) => \"Loner (\" + x + \"+)\",\r\n  noHands: \"No Hands\",\r\n  plagueRidden: \"Plague Ridden\",\r\n  pogoStick: \"Pogo Stick\",\r\n  projectileVomit: \"Projectile Vomit\",\r\n  reallyStupid: \"Really Stupid\",\r\n  regeneration: \"Regeneration\",\r\n  rightStuff: \"Right Stuff\",\r\n  secretWeapon: \"Secret Weapon\",\r\n  stab: \"Stab\",\r\n  stunty: \"Stunty\",\r\n  swarming: \"Swarming\",\r\n  swoop: \"Swoop\",\r\n  takeRoot: \"Take Root\",\r\n  titchy: \"Titchy\",\r\n  timmmber: \"Timmm-ber!\",\r\n  throwTeamMate: \"Throw Team-mate\",\r\n  unchannelledFury: \"Unchannelled Fury\"\r\n};\r\n\r\n\r\nconst positional = (quantity, position, cost, ma, st, ag, pa, av, skills, primaryAccess, secondaryAccess) => {\r\n  return {\r\n    quantity: quantity,\r\n    position: position,\r\n    cost: cost,\r\n    ma: ma,\r\n    st: st,\r\n    ag: ag,\r\n    pa: pa,\r\n    av: av,\r\n    skills: skills,\r\n    primaryAccess: primaryAccess,\r\n    secondaryAccess: secondaryAccess,\r\n  };\r\n};\r\n\r\n\r\nconst roster = (name, positionals, costOfReRolls, apothecaryAllowed, tier) => {\r\n  return {\r\n    name: name,\r\n    positionals: positionals,\r\n    costOfReRolls: costOfReRolls,\r\n    apothecaryAllowed: apothecaryAllowed,\r\n    tier: tier,\r\n  };\r\n};\r\n\r\n\r\nconst rosters = [\r\n  roster(\r\n    \"Amazon\",\r\n    [\r\n      positional(16, \"Linewoman\", 50000, 6, 3, 3, 4, 8, [skills.dodge], \"G\", \"AS\"),\r\n      positional(2, \"Thrower\", 75000, 6, 3, 3, 3, 8, [skills.dodge, skills.pass], \"GP\", \"AS\"),\r\n      positional(2, \"Catcher\", 75000, 6, 3, 3, 5, 8, [skills.catch, skills.dodge], \"AG\", \"S\"),\r\n      positional(4, \"Blitzer\", 90000, 6, 3, 3, 5, 8, [skills.block, skills.dodge], \"GS\", \"A\")\r\n    ],\r\n    50000,\r\n    true,\r\n    1,\r\n  ),\r\n  roster(\r\n    \"Black Orc\",\r\n    [\r\n      positional(12, \"Goblin Bruiser\", 45000, 6, 2, 3, 4, 8, [skills.dodge, skills.rightStuff, skills.stunty, skills.thickSkull], \"A\", \"GPS\"),\r\n      positional(6, \"Black Orc\", 90000, 4, 4, 4, 5, 10, [skills.brawler, skills.grab], \"GS\", \"AP\"),\r\n      positional(1, \"Trained Troll\", 115000, 4, 5, 5, 5, 10, [skills.alwaysHungry, skills.loner(3), skills.mightyBlow(1), skills.projectileVomit, skills.reallyStupid, skills.regeneration, skills.throwTeamMate], \"S\", \"AGP\")\r\n    ],\r\n    60000,\r\n    true,\r\n    2,\r\n  ),\r\n  roster(\r\n    \"Chaos Chosen\",\r\n    [\r\n      positional(16, \"Beastman Runner\", 60000, 6, 3, 3, 4, 9, [skills.horns], \"GMS\", \"AP\"),\r\n      positional(4, \"Chosen Blocker\", 100000, 5, 4, 3, 5, 10, [], \"GMS\", \"A\"),\r\n      positional(1, \"Chaos Troll\", 115000, 4, 5, 5, 5, 10, [skills.alwaysHungry, skills.loner(4), skills.mightyBlow(1), skills.projectileVomit, skills.reallyStupid, skills.regeneration, skills.throwTeamMate], \"MS\", \"AG\"),\r\n      positional(1, \"Chaos Ogre\", 140000, 5, 5, 4, 5, 10, [skills.boneHead, skills.loner(4), skills.mightyBlow(1), skills.thickSkull, skills.throwTeamMate], \"MS\", \"AG\"),\r\n      positional(1, \"Minotaur\", 150000, 5, 5, 4, null, 9, [skills.loner(4), skills.frenzy, skills.horns, skills.mightyBlow(1), skills.thickSkull, skills.unchannelledFury], \"MS\", \"AG\")\r\n    ],\r\n    60000,\r\n    true,\r\n    2,\r\n  ),\r\n  roster(\r\n    \"Chaos Dwarf\",\r\n    [\r\n      positional(16, \"Hobgoblin\", 40000, 6, 3, 3, 4, 8, [], \"G\", \"AS\"),\r\n      positional(6, \"Blocker\", 70000, 4, 3, 4, 6, 10, [skills.block, skills.tackle, skills.thickSkull], \"GS\", \"AM\"),\r\n      positional(2, \"Bull Centaur\", 130000, 6, 4, 4, 6, 10, [skills.sprint, skills.sureFeet, skills.thickSkull], \"GS\", \"A\"),\r\n      positional(1, \"Enslaved Minotaur\", 150000, 5, 5, 4, null, 9, [skills.animalSavagery, skills.frenzy, skills.horns, skills.loner(4), skills.mightyBlow(1), skills.thickSkull], \"S\", \"AGM\")\r\n    ],\r\n    70000,\r\n    true,\r\n    1,\r\n  ),\r\n  roster(\r\n    \"Chaos Renegade\",\r\n    [\r\n      positional(12, \"Human Lineman\", 50000, 6, 3, 3, 4, 9, [], \"GM\", \"AS\"),\r\n      positional(1, \"Human Thrower\", 75000, 6, 3, 3, 3, 9, [skills.animosity(\"all team-mates\"), skills.pass, skills.safePairOfHands], \"GMP\", \"AS\"),\r\n      positional(1, \"Goblin\", 40000, 6, 2, 3, 4, 8, [skills.animosity(\"all team-mates\"), skills.dodge, skills.rightStuff, skills.stunty], \"AM\", \"GP\"),\r\n      positional(1, \"Orc\", 50000, 5, 3, 3, 5, 10, [skills.animosity(\"all team-mates\")], \"GM\", \"AS\"),\r\n      positional(1, \"Skaven\", 50000, 7, 3, 3, 4, 8, [skills.animosity(\"all team-mates\")], \"GM\", \"AS\"),\r\n      positional(1, \"Dark Elf\", 75000, 6, 3, 2, 3, 9, [skills.animosity(\"all team-mates\")], \"AGM\", \"PS\"),\r\n      positional(1, \"Troll\", 115000, 4, 5, 5, 5, 10, [skills.alwaysHungry, skills.loner(4), skills.mightyBlow(1), skills.projectileVomit, skills.reallyStupid, skills.regeneration, skills.throwTeamMate], \"S\", \"AGM\"),\r\n      positional(1, \"Ogre\", 140000, 5, 5, 4, 5, 10, [skills.boneHead, skills.loner(4), skills.mightyBlow(1), skills.thickSkull, skills.throwTeamMate], \"S\", \"AGM\"),\r\n      positional(1, \"Minotaur\", 150000, 5, 5, 4, null, 9, [skills.loner(4), skills.frenzy, skills.horns, skills.mightyBlow(1), skills.thickSkull, skills.unchannelledFury], \"S\", \"AGM\"),\r\n      positional(1, \"Rat Ogre\", 150000, 6, 5, 4, null, 9, [skills.animalSavagery, skills.frenzy, skills.loner(4), skills.mightyBlow(1), skills.prehensileTail], \"S\", \"AGM\")\r\n    ],\r\n    70000,\r\n    true,\r\n    2,\r\n  ),\r\n  roster(\r\n    \"Dark Elf\",\r\n    [\r\n      positional(12, \"Lineman\", 70000, 6, 3, 2, 4, 9, [], \"AG\", \"S\"),\r\n      positional(2, \"Runner\", 80000, 7, 3, 2, 3, 8, [skills.dumpOff], \"AGP\", \"S\"),\r\n      positional(4, \"Blitzer\", 100000, 7, 3, 2, 4, 9, [skills.block], \"AG\", \"PS\"),\r\n      positional(2, \"Assassin\", 85000, 7, 3, 2, 5, 8, [skills.shadowing, skills.stab], \"AG\", \"PS\"),\r\n      positional(2, \"Witch Elf\", 110000, 7, 3, 2, 5, 8, [skills.dodge, skills.frenzy, skills.jumpUp], \"AG\", \"PS\")\r\n    ],\r\n    50000,\r\n    true,\r\n    1,\r\n  ),\r\n  roster(\r\n    \"Dwarf\",\r\n    [\r\n      positional(12, \"Blocker\", 70000, 4, 3, 4, 5, 10, [skills.block, skills.tackle, skills.thickSkull], \"GS\", \"A\"),\r\n      positional(2, \"Runner\", 85000, 6, 3, 3, 4, 9, [skills.sureHands, skills.thickSkull], \"GP\", \"AS\"),\r\n      positional(2, \"Blitzer\", 80000, 5, 3, 3, 4, 10, [skills.block, skills.thickSkull], \"GS\", \"AP\"),\r\n      positional(2, \"Troll Slayer\", 95000, 5, 3, 4, null, 9, [skills.block, skills.dauntless, skills.frenzy, skills.thickSkull], \"GS\", \"A\"),\r\n      positional(1, \"Deathroller\", 170000, 4, 7, 5, null, 11, [skills.breakTackle, skills.dirtyPlayer(2), skills.juggernaut, skills.loner(5), skills.mightyBlow(1), skills.noHands, skills.secretWeapon, skills.standFirm], \"S\", \"AG\")\r\n    ],\r\n    50000,\r\n    true,\r\n    1,\r\n  ),\r\n  roster(\r\n    \"Elven Union\",\r\n    [\r\n      positional(12, \"Lineman\", 60000, 6, 3, 2, 4, 8, [], \"AG\", \"S\"),\r\n      positional(2, \"Thrower\", 75000, 6, 3, 2, 2, 8, [skills.pass], \"AGP\", \"S\"),\r\n      positional(4, \"Catcher\", 100000, 8, 3, 2, 4, 8, [skills.catch, skills.nervesOfSteel], \"AG\", \"S\"),\r\n      positional(2, \"Blitzer\", 115000, 7, 3, 2, 3, 9, [skills.block, skills.sideStep], \"AG\", \"PS\")\r\n    ],\r\n    50000,\r\n    true,\r\n    2,\r\n  ),\r\n  roster(\r\n    \"Goblin\",\r\n    [\r\n      positional(16, \"Lineman\", 40000, 6, 2, 3, 4, 8, [skills.dodge, skills.rightStuff, skills.stunty], \"A\", \"GPS\"),\r\n      positional(1, \"Bomma\", 45000, 6, 2, 3, 4, 8, [skills.bombardier, skills.dodge, skills.secretWeapon, skills.stunty], \"A\", \"GPS\"),\r\n      positional(1, \"Looney\", 40000, 6, 2, 3, null, 8, [skills.chainsaw, skills.secretWeapon, skills.stunty], \"A\", \"GS\"),\r\n      positional(1, \"Fanatic\", 70000, 3, 7, 3, null, 8, [skills.ballAndChain, skills.noHands, skills.secretWeapon, skills.stunty], \"S\", \"AG\"),\r\n      positional(1, \"Pogoer\", 75000, 7, 2, 3, 5, 8, [skills.dodge, skills.pogoStick, skills.stunty], \"A\", \"GPS\"),\r\n      positional(1, \"Ooligan\", 65000, 6, 2, 3, 6, 8, [skills.dirtyPlayer(1), skills.disturbingPresence, skills.dodge, skills.rightStuff, skills.stunty], \"A\", \"GPS\"),\r\n      positional(1, \"Doom Diver\", 60000, 6, 2, 3, 6, 8, [skills.rightStuff, skills.stunty, skills.swoop], \"A\", \"GS\"),\r\n      positional(2, \"Trained Troll\", 115000, 4, 5, 5, 5, 10, [skills.alwaysHungry, skills.loner(3), skills.mightyBlow(1), skills.projectileVomit, skills.reallyStupid, skills.regeneration, skills.throwTeamMate], \"S\", \"AGP\")\r\n    ],\r\n    60000,\r\n    true,\r\n    3,\r\n  ),\r\n  roster(\r\n    \"Halfling\",\r\n    [\r\n      positional(16, \"Hopeful\", 30000, 5, 2, 3, 4, 7, [skills.dodge, skills.rightStuff, skills.stunty], \"A\", \"GS\"),\r\n      positional(2, \"Hefty\", 50000, 5, 2, 3, 3, 8, [skills.dodge, skills.fend, skills.stunty], \"AP\", \"GS\"),\r\n      positional(2, \"Catcher\", 55000, 5, 2, 3, 5, 7, [skills.catch, skills.dodge, skills.rightStuff, skills.sprint, skills.stunty], \"A\", \"GS\"),\r\n      positional(2, \"Altern Forest Treeman\", 120000, 2, 6, 5, 5, 11, [skills.mightyBlow(1), skills.standFirm, skills.strongArm, skills.takeRoot, skills.thickSkull, skills.throwTeamMate, skills.timmmber], \"S\", \"AGP\")\r\n    ],\r\n    60000,\r\n    true,\r\n    3,\r\n  ),\r\n  roster(\r\n    \"High Elf\",\r\n    [\r\n      positional(16, \"Lineman\", 70000, 6, 3, 2, 4, 9, [], \"AG\", \"PS\"),\r\n      positional(2, \"Thrower\", 100000, 6, 3, 2, 2, 9, [skills.cloudBurster, skills.pass, skills.safePass], \"AGP\", \"S\"),\r\n      positional(4, \"Catcher\", 90000, 8, 3, 2, 5, 8, [skills.catch], \"AG\", \"S\"),\r\n      positional(2, \"Blitzer\", 100000, 7, 3, 2, 4, 9, [skills.block], \"AG\", \"PS\")\r\n    ],\r\n    50000,\r\n    true,\r\n    2,\r\n  ),\r\n  roster(\r\n    \"Human\",\r\n    [\r\n      positional(16, \"Lineman\", 50000, 6, 3, 3, 4, 9, [], \"G\", \"AS\"),\r\n      positional(2, \"Thrower\", 80000, 6, 3, 3, 2, 9, [skills.pass, skills.sureHands], \"GP\", \"AS\"),\r\n      positional(4, \"Catcher\", 65000, 8, 2, 3, 5, 8, [skills.catch, skills.dodge], \"AG\", \"SP\"),\r\n      positional(4, \"Blitzer\", 85000, 7, 3, 3, 4, 9, [skills.block], \"GS\", \"AP\"),\r\n      positional(3, \"Halfling Hopeful\", 30000, 5, 2, 3, 4, 7, [skills.dodge, skills.rightStuff, skills.stunty], \"A\", \"GS\"),\r\n      positional(1, \"Ogre\", 140000, 5, 5, 4, 5, 10, [skills.boneHead, skills.loner(4), skills.mightyBlow(1), skills.thickSkull, skills.throwTeamMate], \"S\", \"AG\")\r\n    ],\r\n    50000,\r\n    true,\r\n    1,\r\n  ),\r\n  roster(\r\n    \"Imperial Nobility\",\r\n    [\r\n      positional(12, \"Retainer Lineman\", 45000, 6, 3, 4, 4, 8, [skills.fend], \"G\", \"AS\"),\r\n      positional(2, \"Thrower\", 75000, 6, 3, 3, 3, 9, [skills.pass, skills.runningPass], \"GP\", \"AS\"),\r\n      positional(2, \"Noble Blitzer\", 105000, 7, 3, 3, 4, 9, [skills.block, skills.catch], \"AG\", \"PS\"),\r\n      positional(4, \"Bodyguard\", 90000, 6, 3, 3, 5, 9, [skills.standFirm, skills.wrestle], \"GS\", \"A\"),\r\n      positional(1, \"Ogre\", 140000, 5, 5, 4, 5, 10, [skills.boneHead, skills.loner(4), skills.mightyBlow(1), skills.thickSkull, skills.throwTeamMate], \"S\", \"AG\")\r\n    ],\r\n    70000,\r\n    true,\r\n    2,\r\n  ),\r\n  roster(\r\n    \"Khorne\",\r\n    [\r\n      positional(16, \"Pit Fighter\", 60000, 6, 3, 3, 4, 9, [skills.frenzy], \"G\", \"AS\"),\r\n      positional(4, \"Bloodletter\", 80000, 6, 3, 3, 4, 8, [skills.horns, skills.juggernaut, skills.regeneration], \"AGS\", \"P\"),\r\n      positional(2, \"Herald\", 90000, 6, 3, 3, 5, 9, [skills.frenzy, skills.horns, skills.juggernaut], \"GS\", \"AP\"),\r\n      positional(1, \"Bloodthirster\", 180000, 6, 5, 5, null, 10, [skills.claws, skills.frenzy, skills.horns, skills.juggernaut, skills.loner(4), skills.regeneration, skills.unchannelledFury], \"S\", \"AG\"),\r\n    ],\r\n    70000,\r\n    true,\r\n    2,\r\n  ),\r\n  roster(\r\n    \"Lizardmen\",\r\n    [\r\n      positional(12, \"Skink Runner\", 60000, 8, 2, 3, 4, 8, [skills.dodge, skills.stunty], \"A\", \"GPS\"),\r\n      positional(2, \"Chameleon Skink\", 70000, 7, 2, 3, 3, 8, [skills.dodge, skills.onTheBall, skills.shadowing, skills.stunty], \"A\", \"GPS\"),\r\n      positional(6, \"Saurus Blocker\", 85000, 6, 4, 5, 6, 10, [], \"GS\", \"A\"),\r\n      positional(1, \"Kroxigor\", 140000, 6, 5, 5, null, 10, [skills.boneHead, skills.loner(4), skills.mightyBlow(1), skills.prehensileTail, skills.thickSkull], \"S\", \"AG\")\r\n    ],\r\n    70000,\r\n    true,\r\n    1,\r\n  ),\r\n  roster(\r\n    \"Necromantic Horror\",\r\n    [\r\n      positional(16, \"Zombie\", 40000, 4, 3, 4, null, 9, [skills.regeneration], \"G\", \"AS\"),\r\n      positional(2, \"Ghoul Runner\", 75000, 7, 3, 3, 4, 8, [skills.dodge], \"AG\", \"PS\"),\r\n      positional(2, \"Wraith\", 95000, 6, 3, 3, null, 9, [skills.block, skills.foulAppearance, skills.noHands, skills.regeneration, skills.sideStep], \"GS\", \"A\"),\r\n      positional(2, \"Werewolf\", 125000, 8, 3, 3, 4, 9, [skills.claws, skills.frenzy, skills.regeneration], \"AG\", \"PS\"),\r\n      positional(2, \"Flesh Golem\", 115000, 4, 4, 4, null, 10, [skills.regeneration, skills.standFirm, skills.thickSkull], \"GS\", \"A\")\r\n    ],\r\n    70000,\r\n    false,\r\n    2,\r\n  ),\r\n  roster(\r\n    \"Norse\",\r\n    [\r\n      positional(12, \"Lineman\", 50000, 6, 3, 3, 4, 8, [skills.block], \"G\", \"AS\"),\r\n      positional(2, \"Thrower\", 70000, 6, 3, 3, 3, 8, [skills.block, skills.pass], \"GP\", \"AS\"),\r\n      positional(2, \"Catcher\", 90000, 7, 3, 3, 5, 8, [skills.block, skills.dauntless], \"AG\", \"S\"),\r\n      positional(2, \"Berserker\", 90000, 6, 3, 3, 5, 8, [skills.block, skills.frenzy, skills.jumpUp], \"GS\", \"A\"),\r\n      positional(2, \"Ulfwerener\", 105000, 6, 4, 4, null, 9, [skills.frenzy], \"GS\", \"A\"),\r\n      positional(1, \"Yhetee\", 140000, 5, 5, 5, null, 9, [skills.claws, skills.disturbingPresence, skills.frenzy, skills.loner(4), skills.unchannelledFury], \"S\", \"AG\")\r\n    ],\r\n    60000,\r\n    true,\r\n    1,\r\n  ),\r\n  roster(\r\n    \"Nurgle\",\r\n    [\r\n      positional(12, \"Rotter\", 35000, 5, 3, 4, 6, 9, [skills.decay, skills.plagueRidden], \"GM\", \"AS\"),\r\n      positional(4, \"Pestigor\", 75000, 6, 3, 3, 4, 9, [skills.horns, skills.plagueRidden, skills.regeneration], \"GMS\", \"AP\"),\r\n      positional(4, \"Bloater\", 115000, 4, 4, 4, 6, 10, [skills.disturbingPresence, skills.foulAppearance, skills.plagueRidden, skills.regeneration], \"GMS\", \"A\"),\r\n      positional(1, \"Rotspawn\", 140000, 4, 5, 5, null, 10, [skills.disturbingPresence, skills.foulAppearance, skills.loner(4), skills.mightyBlow(1), skills.plagueRidden, skills.reallyStupid, skills.regeneration, skills.tentacles], \"S\", \"AGM\")\r\n    ],\r\n    70000,\r\n    false,\r\n    2,\r\n  ),\r\n  roster(\r\n    \"Ogre\",\r\n    [\r\n      positional(16, \"Gnoblar\", 15000, 5, 1, 3, 5, 6, [skills.dodge, skills.rightStuff, skills.sideStep, skills.stunty, skills.titchy], \"A\", \"G\"),\r\n      positional(1, \"Ogre Runt Punter\", 145000, 5, 5, 4, 4, 10, [skills.boneHead, skills.kickTeamMate, skills.mightyBlow(1), skills.thickSkull], \"PS\", \"AG\"),\r\n      positional(5, \"Ogre Blocker\", 140000, 5, 5, 4, 5, 10, [skills.boneHead, skills.mightyBlow(1), skills.thickSkull, skills.throwTeamMate], \"S\", \"AGP\")\r\n    ],\r\n    70000,\r\n    true,\r\n    3,\r\n  ),\r\n  roster(\r\n    \"Old World Alliance\",\r\n    [\r\n      positional(12, \"Human Lineman\", 50000, 6, 3, 3, 4, 9, [], \"G\", \"AS\"),\r\n      positional(1, \"Human Thrower\", 80000, 6, 3, 3, 3, 9, [skills.animosity(\"all Dwarf and Hafling team-mates\"), skills.pass, skills.sureHands], \"GP\", \"AS\"),\r\n      positional(1, \"Human Catcher\", 65000, 8, 2, 3, 5, 8, [skills.animosity(\"all Dwarf and Hafling team-mates\"), skills.catch, skills.dodge], \"AG\", \"S\"),\r\n      positional(1, \"Human Blitzer\", 90000, 7, 3, 3, 4, 9, [skills.animosity(\"all Dwarf and Hafling team-mates\"), skills.block], \"GS\", \"A\"),\r\n      positional(2, \"Dwarf Blocker\", 75000, 4, 3, 4, 5, 10, [skills.armBar, skills.brawler, skills.loner(3), skills.thickSkull], \"GS\", \"A\"),\r\n      positional(1, \"Dwarf Runner\", 85000, 6, 3, 3, 4, 9, [skills.loner(3), skills.sureHands, skills.thickSkull], \"GP\", \"AS\"),\r\n      positional(1, \"Dwarf Blitzer\", 80000, 5, 3, 3, 4, 10, [skills.block, skills.loner(3), skills.thickSkull], \"GS\", \"A\"),\r\n      positional(1, \"Dwarf Troll Slayer\", 95000, 5, 3, 4, null, 9, [skills.block, skills.dauntless, skills.frenzy, skills.loner(3), skills.thickSkull], \"GS\", \"A\"),\r\n      positional(2, \"Halfling Hopeful\", 30000, 5, 2, 3, 4, 7, [skills.animosity(\"all Dwarf and Human team-mates\"), skills.dodge, skills.rightStuff, skills.stunty], \"A\", \"GS\"),\r\n      positional(1, \"Ogre\", 140000, 5, 5, 4, 5, 10, [skills.boneHead, skills.loner(4), skills.mightyBlow(1), skills.thickSkull, skills.throwTeamMate], \"S\", \"AG\"),\r\n      positional(1, \"Altern Forest Treeman\", 120000, 2, 6, 5, 5, 11, [skills.loner(4), skills.mightyBlow(1), skills.standFirm, skills.strongArm, skills.takeRoot, skills.thickSkull, skills.throwTeamMate, skills.timmmber], \"S\", \"AGP\")\r\n    ],\r\n    70000,\r\n    true,\r\n    1,\r\n  ),\r\n  roster(\r\n    \"Orc\",\r\n    [\r\n      positional(16, \"Lineman\", 50000, 5, 3, 3, 4, 10, [skills.animosity(\"Orc Linemen\")], \"G\", \"AS\"),\r\n      positional(2, \"Thrower\", 65000, 5, 3, 3, 3, 9, [skills.animosity(\"all team-mates\"), skills.pass, skills.sureHands], \"GP\", \"AS\"),\r\n      positional(4, \"Blitzer\", 80000, 6, 3, 3, 4, 10, [skills.animosity(\"all team-mates\"), skills.block], \"GS\", \"AP\"),\r\n      positional(4, \"Big Un Blocker\", 90000, 5, 4, 4, null, 10, [skills.animosity(\"Big Un Blockers\")], \"GS\", \"A\"),\r\n      positional(4, \"Goblin\", 40000, 6, 2, 3, 4, 8, [skills.dodge, skills.rightStuff, skills.stunty], \"A\", \"GS\"),\r\n      positional(1, \"Untrained Troll\", 115000, 4, 5, 5, 5, 10, [skills.alwaysHungry, skills.loner(4), skills.mightyBlow(1), skills.projectileVomit, skills.reallyStupid, skills.regeneration, skills.throwTeamMate], \"S\", \"AGP\")\r\n    ],\r\n    60000,\r\n    true,\r\n    1,\r\n  ),\r\n  roster(\r\n    \"Shambling Undead\",\r\n    [\r\n      positional(12, \"Skeleton\", 40000, 5, 3, 4, 6, 8, [skills.regeneration, skills.thickSkull], \"G\", \"AS\"),\r\n      positional(12, \"Zombie\", 40000, 4, 3, 4, null, 9, [skills.regeneration], \"G\", \"AS\"),\r\n      positional(4, \"Ghoul Runner\", 75000, 7, 3, 3, 4, 8, [skills.dodge], \"AG\", \"PS\"),\r\n      positional(2, \"Wight Blitzer\", 90000, 6, 3, 3, 5, 9, [skills.block, skills.regeneration], \"GS\", \"AP\"),\r\n      positional(2, \"Mummy\", 125000, 3, 5, 5, null, 10, [skills.mightyBlow(1), skills.regeneration], \"S\", \"AG\")\r\n    ],\r\n    70000,\r\n    false,\r\n    1,\r\n  ),\r\n  roster(\r\n    \"Skaven\",\r\n    [\r\n      positional(16, \"Clanrat Lineman\", 50000, 7, 3, 3, 4, 8, [], \"G\", \"AMS\"),\r\n      positional(2, \"Thrower\", 85000, 7, 3, 3, 2, 8, [skills.pass, skills.sureHands], \"GP\", \"AMS\"),\r\n      positional(4, \"Gutter Runner\", 85000, 9, 2, 2, 4, 8, [skills.dodge], \"AG\", \"MPS\"),\r\n      positional(2, \"Blitzer\", 90000, 7, 3, 3, 5, 9, [skills.block], \"GS\", \"AMP\"),\r\n      positional(1, \"Rat Ogre\", 150000, 6, 5, 4, null, 9, [skills.animalSavagery, skills.frenzy, skills.loner(4), skills.mightyBlow(1), skills.prehensileTail], \"S\", \"AGM\")\r\n    ],\r\n    50000,\r\n    true,\r\n    1,\r\n  ),\r\n  roster(\r\n    \"Slann\",\r\n    [\r\n      positional(16, \"Lineman\", 60000, 6, 3, 3, 4, 9, [skills.pogoStick, skills.veryLongLegs], \"G\", \"AS\"),\r\n      positional(4, \"Catcher\", 80000, 7, 2, 2, 4, 8, [skills.divingCatch, skills.pogoStick, skills.veryLongLegs], \"AG\", \"PS\"),\r\n      positional(4, \"Blitzer\", 110000, 7, 3, 3, 4, 9, [skills.divingTackle, skills.jumpUp, skills.pogoStick, skills.veryLongLegs], \"AGS\", \"P\"),\r\n      positional(1, \"Kroxigor\", 140000, 6, 5, 5, null, 10, [skills.boneHead, skills.loner(4), skills.mightyBlow(1), skills.prehensileTail, skills.thickSkull], \"S\", \"AG\")\r\n    ],\r\n    50000,\r\n    true,\r\n    2,\r\n  ),\r\n  roster(\r\n    \"Snotling\",\r\n    [\r\n      positional(16, \"Snotling Lineman\", 15000, 5, 1, 3, 5, 6, [skills.dodge, skills.rightStuff, skills.sideStep, skills.stunty, skills.swarming, skills.titchy], \"A\", \"G\"),\r\n      positional(2, \"Fungus Flinga\", 30000, 5, 1, 3, 4, 6, [skills.bombardier, skills.dodge, skills.rightStuff, skills.secretWeapon, skills.sideStep, skills.stunty], \"AP\", \"G\"),\r\n      positional(2, \"Fun-hoppa\", 20000, 6, 1, 3, 5, 6, [skills.dodge, skills.pogoStick, skills.rightStuff, skills.sideStep, skills.stunty], \"A\", \"G\"),\r\n      positional(2, \"Stilty Runna\", 20000, 6, 1, 3, 5, 6, [skills.dodge, skills.rightStuff, skills.sideStep, skills.sprint, skills.stunty], \"A\", \"G\"),\r\n      positional(2, \"Pump Wagon\", 105000, 4, 5, 5, null, 9, [skills.dirtyPlayer(1), skills.juggernaut, skills.mightyBlow(1), skills.reallyStupid, skills.secretWeapon, skills.standFirm], \"S\", \"AG\"),\r\n      positional(2, \"Trained Troll\", 115000, 4, 5, 5, 5, 10, [skills.alwaysHungry, skills.loner(3), skills.mightyBlow(1), skills.projectileVomit, skills.reallyStupid, skills.regeneration, skills.throwTeamMate], \"S\", \"AGP\")\r\n    ],\r\n    60000,\r\n    true,\r\n    3,\r\n  ),\r\n  roster(\r\n    \"Tomb Kings\",\r\n    [\r\n      positional(16, \"Skeleton\", 40000, 5, 3, 4, 6, 8, [skills.regeneration, skills.thickSkull], \"G\", \"AS\"),\r\n      positional(2, \"Anointed Thrower\", 70000, 6, 3, 4, 3, 8, [skills.pass, skills.regeneration, skills.sureHands, skills.thickSkull], \"GP\", \"A\"),\r\n      positional(2, \"Anointed Blitzer\", 90000, 6, 3, 4, 6, 9, [skills.block, skills.regeneration, skills.thickSkull], \"GS\", \"AP\"),\r\n      positional(4, \"Tomb Guardian\", 100000, 4, 5, 5, null, 10, [skills.decay, skills.regeneration], \"S\", \"AG\")\r\n    ],\r\n    70000,\r\n    false,\r\n    2,\r\n  ),\r\n  roster(\r\n    \"Underworld Denizens\",\r\n    [\r\n      positional(12, \"Underworld Goblin\", 40000, 6, 2, 3, 4, 8, [skills.dodge, skills.rightStuff, skills.stunty], \"AM\", \"GS\"),\r\n      positional(6, \"Underworld Snotling\", 15000, 5, 1, 3, 5, 6, [skills.dodge, skills.rightStuff, skills.sideStep, skills.stunty, skills.swarming, skills.titchy], \"AM\", \"G\"),\r\n      positional(3, \"Skaven Clanrat\", 50000, 7, 3, 3, 4, 8, [skills.animosity(\"Underworld Goblin Linemen\")], \"GM\", \"AS\"),\r\n      positional(1, \"Skaven Thrower\", 85000, 7, 3, 3, 2, 8, [skills.animosity(\"Underworld Goblin Linemen\"), skills.pass, skills.sureHands], \"GMP\", \"AS\"),\r\n      positional(1, \"Gutter Runner\", 85000, 9, 2, 2, 4, 8, [skills.animosity(\"Underworld Goblin Linemen\"), skills.dodge], \"AGM\", \"PS\"),\r\n      positional(1, \"Skaven Blitzer\", 90000, 7, 3, 3, 5, 9, [skills.animosity(\"Underworld Goblin Linemen\"), skills.block], \"GMS\", \"AP\"),\r\n      positional(1, \"Underworld Troll\", 115000, 4, 5, 5, 5, 10, [skills.alwaysHungry, skills.loner(4), skills.mightyBlow(1), skills.projectileVomit, skills.reallyStupid, skills.regeneration, skills.throwTeamMate], \"MS\", \"AGP\"),\r\n      positional(1, \"Mutant Rat Ogre\", 150000, 6, 5, 4, null, 9, [skills.animalSavagery, skills.frenzy, skills.loner(4), skills.mightyBlow(1), skills.prehensileTail], \"MS\", \"AG\")\r\n    ],\r\n    70000,\r\n    true,\r\n    2,\r\n  ),\r\n  roster(\r\n    \"Vampire\",\r\n    [\r\n      positional(12, \"Thrall\", 40000, 6, 3, 3, 5, 8, [], \"G\", \"AS\"),\r\n      positional(6, \"Vampire\", 110000, 6, 4, 2, 3, 9, [skills.animalSavagery, skills.hypnoticGaze, skills.regeneration], \"AGS\", \"P\")\r\n    ],\r\n    70000,\r\n    true,\r\n    2,\r\n  ),\r\n  roster(\r\n    \"Wood Elf\",\r\n    [\r\n      positional(12, \"Lineman\", 70000, 7, 3, 2, 4, 8, [], \"AG\", \"S\"),\r\n      positional(2, \"Thrower\", 95000, 7, 3, 2, 2, 8, [skills.pass], \"AGP\", \"S\"),\r\n      positional(4, \"Catcher\", 90000, 8, 2, 2, 4, 8, [skills.catch, skills.dodge], \"AG\", \"PS\"),\r\n      positional(2, \"Wardancer\", 125000, 8, 3, 2, 4, 8, [skills.block, skills.dodge, skills.leap], \"AG\", \"PS\"),\r\n      positional(1, \"Loren Forest Treeman\", 120000, 2, 6, 5, 5, 11, [skills.loner(4), skills.mightyBlow(1), skills.standFirm, skills.strongArm, skills.takeRoot, skills.thickSkull, skills.throwTeamMate], \"S\", \"AG\")\r\n    ],\r\n    50000,\r\n    true,\r\n    1,\r\n  ),\r\n];\r\n\r\nexport {rosters, skills};\r\n","import React, {Component} from \"react\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Tab from \"react-bootstrap/Tab\";\r\nimport Table from \"react-bootstrap/Table\";\r\nimport Tabs from \"react-bootstrap/Tabs\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\n\r\nimport {rosters, skills} from \"../data\";\r\n\r\n\r\n// A player in the player list\r\nconst player = (name, positionNumber, positionName, ma, st, ag, pa, av, skills, value, primaryAccess, secondaryAccess) => {\r\n  return {\r\n    name: name,\r\n    positionNumber: positionNumber,\r\n    positionName: positionName,\r\n    ma: ma,\r\n    st: st,\r\n    ag: ag,\r\n    pa: pa,\r\n    av: av,\r\n    maMod: 0,\r\n    stMod: 0,\r\n    agMod: 0,\r\n    paMod: 0,\r\n    avMod: 0,\r\n    skills: skills || [],\r\n    primarySkills: [],\r\n    secondarySkills: [],\r\n    value: value,\r\n    primaryAccess: primaryAccess,\r\n    secondaryAccess: secondaryAccess\r\n  };\r\n};\r\n\r\n\r\nclass Team extends Component {\r\n\r\n  state = {\r\n    budget: 1000000,\r\n    costMultiplierReRolls: 1,\r\n    costOfAssistantCoaches: 10000,\r\n    costOfCheerleaders: 10000,\r\n    costOfDedicatedFans: 10000,\r\n    costOfApothecary: 50000,\r\n    playerAdvancementsCostGold: true,\r\n    customisePlayerAdvancementCosts: false,\r\n    costOfPrimarySkill: 20000,\r\n    costOfSecondarySkill: 40000,\r\n    costOfAV: 10000,\r\n    costOfMA: 20000,\r\n    costOfPA: 20000,\r\n    costOfAG: 40000,\r\n    costOfST: 80000,\r\n    name: \"\",\r\n    roster: rosters[0],\r\n    coach: \"\",\r\n    reRolls: 0,\r\n    dedicatedFans: 0,\r\n    assistantCoaches: 0,\r\n    cheerleaders: 0,\r\n    apothecary: 0,\r\n    players: new Array(16).fill(null).map((x) => player()),\r\n    showPlayerAdvancementModal: false,\r\n    selectedPlayerNumber: null,\r\n  }\r\n\r\n  loadTeam = () => {\r\n    let state = JSON.parse(window.localStorage.getItem(\"state\"));\r\n    let rosterName = state.roster.name;\r\n    this.setState(state);\r\n    Array.from(document.querySelector(\"#roster\").options).forEach(function(option_element) {\r\n      let option_text = option_element.text;\r\n      let option_value = option_element.value;\r\n      if (option_text === rosterName) {\r\n        document.getElementById(\"roster\").value = option_value;\r\n      }\r\n    });\r\n  }\r\n\r\n  saveTeam = () => {\r\n    let state = JSON.stringify(this.state);\r\n    window.localStorage.setItem(\"state\", state);\r\n  }\r\n\r\n  setRoster = (rosterIndex) => {\r\n    // Select a team roster\r\n    this.setState({\r\n      roster: rosters[rosterIndex],\r\n      reRolls: 0,\r\n      dedicatedFans: 0,\r\n      assistantCoaches: 0,\r\n      cheerleaders: 0,\r\n      apothecary: 0,\r\n      players: new Array(16).fill(null).map((x) => player())\r\n    });\r\n  }\r\n\r\n  setRulesPresetStandard = () => {\r\n    this.setState({\r\n      budget: 1000000,\r\n      costMultiplierReRolls: 1,\r\n      costOfAssistantCoaches: 10000,\r\n      costOfCheerleaders: 10000,\r\n      costOfDedicatedFans: 10000,\r\n      costOfApothecary: 50000,\r\n    });\r\n  }\r\n\r\n  setRulesPresetSevens = () => {\r\n    this.setState({\r\n      budget: 600000,\r\n      costMultiplierReRolls: 2,\r\n      costOfAssistantCoaches: 20000,\r\n      costOfCheerleaders: 20000,\r\n      costOfDedicatedFans: 20000,\r\n      costOfApothecary: 80000,\r\n    });\r\n  }\r\n\r\n  getCostOfReRolls = () => {\r\n    return Math.round(this.state.roster.costOfReRolls * this.state.costMultiplierReRolls);\r\n  }\r\n\r\n  setPlayer = (playerNumber, positionNumber) => {\r\n    // Set a player in the player list\r\n    // Note: inputs playerNumber and playerPosition are one-indexed\r\n    let players = this.state.players;\r\n    if (positionNumber === 0) {\r\n      // No position is selected: insert empty player\r\n      players[playerNumber-1] = player(players[playerNumber-1].name);\r\n    } else {\r\n      // Position is selected: insert new player\r\n      let p = this.state.roster.positionals[positionNumber-1];\r\n      players[playerNumber-1] = player(players[playerNumber-1].name, positionNumber, p.position, p.ma, p.st, p.ag, p.pa, p.av, p.skills, p.cost, p.primaryAccess, p.secondaryAccess);\r\n    }\r\n    this.setState({players: players});\r\n    // Remove focus from dropdown menu to trigger onblur event\r\n    document.activeElement.blur();\r\n  }\r\n\r\n  onSetPlayerOpen = (options) => {\r\n    // Show quantity (0-16) in dropdown options\r\n    for (let i = 0; i < this.state.roster.positionals.length; i++) {\r\n      let p = this.state.roster.positionals[i];\r\n      options[i+1].textContent = p.position + \" (0-\" + p.quantity + \")\";\r\n    }\r\n  }\r\n\r\n  onSetPlayerClose = (options) => {\r\n    // Remove quantity (0-16) in dropdown options\r\n    for (let i = 0; i < this.state.roster.positionals.length; i++) {\r\n      let p = this.state.roster.positionals[i];\r\n      options[i+1].textContent = p.position;\r\n    }\r\n  }\r\n\r\n  setPlayerName = (playerNumber, playerName) => {\r\n    // Set the name of a player in the player list\r\n    let players = this.state.players;\r\n    players[playerNumber-1].name = playerName;\r\n    this.setState({players: players});\r\n  }\r\n\r\n  getSelectedPlayer = () => {\r\n    // Get the player selected for advancement\r\n    if (this.state.showPlayerAdvancementModal && this.state.selectedPlayerNumber) {\r\n      return this.state.players[this.state.selectedPlayerNumber-1];\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  setSelectedPlayer = (player) => {\r\n    // Save player to state at the index of the selected player\r\n    let players = this.state.players;\r\n    players[this.state.selectedPlayerNumber-1] = player;\r\n    this.setState({players: players});\r\n  }\r\n\r\n  renderPlayerSkills = (player) => {\r\n    // Render player skill list including skill advancements\r\n    if (player.positionNumber) {\r\n      let skills = player.skills.map((s) => <span className=\"skill-default\">{s}</span>);\r\n      skills = skills.concat(player.primarySkills.map((s) => <span className=\"skill-primary\">{s}</span>));\r\n      skills = skills.concat(player.secondarySkills.map((s) => <span className=\"skill-secondary\">{s}</span>));\r\n      return <div>{skills.map((s, i) => i > 0 ? <span key={i}>, {s}</span> : <span key={i}>{s}</span>)}</div>;\r\n    }\r\n  }\r\n\r\n  showPlayerAdvancementModal = (playerNumber) => {\r\n    // Select player and show player advancement modal\r\n    this.setState({\r\n      selectedPlayerNumber: playerNumber,\r\n      showPlayerAdvancementModal: true\r\n    });\r\n  }\r\n\r\n  renderPlayerChar = (player, char, interactive) => {\r\n    if (typeof player[char] !== \"undefined\") {\r\n      let mod = player[char + \"Mod\"];\r\n      if([\"ma\", \"st\"].includes(char)) {\r\n        return <span className={mod && \"text-orange\"}>{player[char] + mod}</span>;\r\n      } else if (char === \"ag\") {\r\n        return <span className={mod && \"text-orange\"}>{player[char] - mod + \"+\"}</span>;\r\n      } else if (char === \"pa\") {\r\n        if (player[char] !== null) {\r\n          return <span className={mod && \"text-orange\"}>{player[char] - mod + \"+\"}</span>;\r\n        } else {\r\n          return <span>-</span>;\r\n        }\r\n      } else if (char === \"av\") {\r\n        return <span className={mod && \"text-orange\"}>{player[char] + mod + \"+\"}</span>;\r\n      }\r\n    }\r\n  }\r\n\r\n  toggleSelectedPlayerChar = (char) => {\r\n    // Improve or reset a characteristic of the selected player\r\n    let player = this.getSelectedPlayer();\r\n    if (this.playerCharMayBeImproved(player, char)) {\r\n      player[char + \"Mod\"] += 1;\r\n    } else {\r\n      player[char + \"Mod\"] = 0;\r\n    }\r\n    this.setSelectedPlayer(player);\r\n  }\r\n\r\n  playerCharMayBeImproved = (player, char) => {\r\n    // Determine if a player characteristic may be improved\r\n    return !(\r\n      player[char + \"Mod\"] === 2 ||\r\n      (char === \"ma\" && player.ma + player.maMod === 9) ||\r\n      (char === \"st\" && player.st + player.stMod === 8) ||\r\n      (char === \"ag\" && player.ag - player.agMod === 1) ||\r\n      (char === \"pa\" && (player.pa === null || player.pa - player.paMod === 1)) ||\r\n      (char === \"av\" && player.av + player.avMod === 11)\r\n    );\r\n  }\r\n\r\n  renderSkill = (skill, category) => {\r\n    // Render a skill in the skill advancement table\r\n    let player = this.getSelectedPlayer();\r\n    if (player) {\r\n      if (player.skills.includes(skill)) {\r\n        // Selected player has the skill as a starting skill\r\n        return <span className=\"text-orange\">{skill}</span>;\r\n      } else if (!player.primaryAccess.includes(category) && !player.secondaryAccess.includes(category)) {\r\n        // Selected player does not have access to the skill\r\n        return <span className=\"text-muted\">{skill}</span>;\r\n      } else if (player.primarySkills.includes(skill) || player.secondarySkills.includes(skill)) {\r\n        // Selected player has already added the skill\r\n        return <span className=\"skill-selected\" onClick={() => this.removeSkill(skill)}>{skill}</span>;\r\n      } else {\r\n        // Skill is available\r\n        return <span className=\"skill-available\" onClick={() => this.addSkill(skill, category)}>{skill}</span>;\r\n      }\r\n    }\r\n  }\r\n\r\n  addSkill = (skill, category) => {\r\n    // Add skill to selected player\r\n    let player = this.getSelectedPlayer();\r\n    if (player.primaryAccess.includes(category)) {\r\n      player.primarySkills.push(skill);\r\n      player.primarySkills.sort();\r\n    } else if (player.secondaryAccess.includes(category)) {\r\n      player.secondarySkills.push(skill);\r\n      player.secondarySkills.sort();\r\n    }\r\n    this.setSelectedPlayer(player);\r\n  }\r\n\r\n  removeSkill = (skill) => {\r\n    // Remove skill from selected player\r\n    let player = this.getSelectedPlayer();\r\n    player.primarySkills = player.primarySkills.filter((s) => s !== skill);\r\n    player.secondarySkills = player.secondarySkills.filter((s) => s !== skill);\r\n    this.setSelectedPlayer(player);\r\n  }\r\n\r\n  getPlayerValue = (player) => {\r\n    let value = player.value || 0;\r\n    if (this.state.playerAdvancementsCostGold) {\r\n      value += player.primarySkills.length * this.state.costOfPrimarySkill;\r\n      value += player.secondarySkills.length * this.state.costOfSecondarySkill;\r\n      value += player.maMod * this.state.costOfMA;\r\n      value += player.stMod * this.state.costOfST;\r\n      value += player.agMod * this.state.costOfAG;\r\n      value += player.paMod * this.state.costOfPA;\r\n      value += player.avMod * this.state.costOfAV;\r\n    }\r\n    return value;\r\n  }\r\n\r\n  getTeamValue = () => {\r\n    // Compute the current team value\r\n    let tv = 0;\r\n    // players\r\n    tv += this.state.players.reduce((total, player) => {return total + this.getPlayerValue(player);}, 0);\r\n    // sideline staff\r\n    tv += this.state.assistantCoaches * this.state.costOfAssistantCoaches;\r\n    tv += this.state.cheerleaders * this.state.costOfCheerleaders;\r\n    tv += this.state.apothecary * this.state.costOfApothecary;\r\n    // team re-rolls\r\n    tv += this.state.reRolls * this.getCostOfReRolls();\r\n    // (fans and treasury do not add to team value)\r\n    return tv;\r\n  }\r\n\r\n  getTreasury = () => {\r\n    // Compute the current treasury value\r\n    let treasury = this.state.budget;\r\n    treasury -= this.getTeamValue();\r\n    treasury -= this.state.dedicatedFans * this.state.costOfDedicatedFans;\r\n    return treasury;\r\n  }\r\n\r\n  formatCost = (x) => {\r\n    // Format a number into a cost string, example: 10000 -> 10,000 GP\r\n    return `${x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")} GP`;\r\n  }\r\n\r\n  toggleCustomisePlayerAdvancementCosts = () => {\r\n    this.setState({\r\n      customisePlayerAdvancementCosts: !this.state.customisePlayerAdvancementCosts,\r\n      costOfPrimarySkill: 20000,\r\n      costOfSecondarySkill: 40000,\r\n      costOfAV: 10000,\r\n      costOfMA: 20000,\r\n      costOfPA: 20000,\r\n      costOfAG: 40000,\r\n      costOfST: 80000,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n\r\n        <Tabs defaultActiveKey=\"team\">\r\n          <Tab eventKey=\"team\" title=\"Team\">\r\n            <Row>\r\n              <Col md=\"5\">\r\n                <Table borderless size=\"sm\" className=\"margin-zero team-table-1\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Team Name:</td>\r\n                      <td><Form.Control type=\"text\" size=\"sm\" value={this.state.name} onChange={(e) => this.setState({name: e.target.value})} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Coach:</td>\r\n                      <td><Form.Control type=\"text\" size=\"sm\" value={this.state.coach} onChange={(e) => this.setState({coach: e.target.value})} /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Roster:</td>\r\n                      <td>\r\n                        <Form.Control id=\"roster\" as=\"select\" size=\"sm\" onChange={(e) => this.setRoster(e.target.value)}>\r\n                         {rosters.map((roster, i) => {return <option key={i} value={i}>{roster.name}</option>;})}\r\n                        </Form.Control>\r\n                      </td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Treasury:</td>\r\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.getTreasury())} readOnly /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Team Value:</td>\r\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.getTeamValue())} readOnly /></td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </Col>\r\n              <Col md=\"7\">\r\n                <Table borderless size=\"sm\" className=\"margin-zero team-table-2\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Team re-rolls:</td>\r\n                      <td><Form.Control type=\"number\" size=\"sm\" value={this.state.reRolls.toString()} onChange={(e) => this.setState({reRolls: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), 8)})} /></td>\r\n                      <td>x</td>\r\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.getCostOfReRolls())} readOnly /></td>\r\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.state.reRolls * this.getCostOfReRolls())} readOnly /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Assistant Coaches:</td>\r\n                      <td><Form.Control type=\"number\" size=\"sm\" value={this.state.assistantCoaches.toString()} onChange={(e) => this.setState({assistantCoaches: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), 6)})} /></td>\r\n                      <td>x</td>\r\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.state.costOfAssistantCoaches)} plaintext readOnly /></td>\r\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.state.assistantCoaches * this.state.costOfAssistantCoaches)} readOnly /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Cheerleaders:</td>\r\n                      <td><Form.Control type=\"number\" size=\"sm\" value={this.state.cheerleaders.toString()} onChange={(e) => this.setState({cheerleaders: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), 12)})} /></td>\r\n                      <td>x</td>\r\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.state.costOfCheerleaders)} plaintext readOnly /></td>\r\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.state.cheerleaders * this.state.costOfCheerleaders)} readOnly /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Dedicated Fans:</td>\r\n                      <td><Form.Control type=\"number\" size=\"sm\" value={this.state.dedicatedFans.toString()} onChange={(e) => this.setState({dedicatedFans: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), 6)})} /></td>\r\n                      <td>x</td>\r\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.state.costOfDedicatedFans)} plaintext readOnly /></td>\r\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.state.dedicatedFans * this.state.costOfDedicatedFans)} readOnly /></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Apothecary:</td>\r\n                      <td><Form.Control type=\"number\" size=\"sm\" value={this.state.apothecary.toString()} onChange={(e) => this.setState({apothecary: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), 1)})} readOnly={!this.state.roster.apothecaryAllowed} /></td>\r\n                      <td>x</td>\r\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.state.costOfApothecary)} plaintext readOnly /></td>\r\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.state.apothecary * this.state.costOfApothecary)} readOnly /></td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </Col>\r\n            </Row>\r\n          </Tab>\r\n          <Tab eventKey=\"budget\" title=\"Budget\">\r\n            <Row>\r\n              <Col md=\"6\">\r\n                <Table borderless size=\"sm\" className=\"margin-zero budget-table\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Rules presets:</td>\r\n                      <td>\r\n                        <Button variant=\"dark\" size=\"sm\" onClick={() => this.setRulesPresetStandard()}>Standard</Button>{\" \"}\r\n                        <Button variant=\"dark\" size=\"sm\" onClick={() => this.setRulesPresetSevens()}>Sevens</Button>\r\n                      </td>\r\n                      <td></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Team draft budget:</td>\r\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.budget.toString()} onChange={(e) => this.setState({budget: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} /></td>\r\n                      <td>GP</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Team re-roll cost multiplier:</td>\r\n                        <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.costMultiplierReRolls.toString()} onChange={(e) => this.setState({costMultiplierReRolls: e.target.value && Math.max(e.target.value || 0, 0)})} /></td>\r\n                      <td>x</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Cost of assistant coaches:</td>\r\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.costOfAssistantCoaches.toString()} onChange={(e) => this.setState({costOfAssistantCoaches: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} /></td>\r\n                      <td>GP</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Cost of cheerleaders:</td>\r\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.costOfCheerleaders.toString()} onChange={(e) => this.setState({costOfCheerleaders: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} /></td>\r\n                      <td>GP</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Cost of dedicated fans:</td>\r\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.costOfDedicatedFans.toString()} onChange={(e) => this.setState({costOfDedicatedFans: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} /></td>\r\n                      <td>GP</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Cost of apothecary:</td>\r\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.costOfApothecary.toString()} onChange={(e) => this.setState({costOfApothecary: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} /></td>\r\n                      <td>GP</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </Col>\r\n              <Col md=\"6\">\r\n                <Table borderless size=\"sm\" className=\"margin-zero budget-table\">\r\n                  <tbody>\r\n                    <tr>\r\n                      <td>Player advancements cost gold:</td>\r\n                      <td><Form.Check inline type=\"checkbox\" defaultChecked={this.state.playerAdvancementsCostGold} onChange={(e) => this.setState({playerAdvancementsCostGold: !this.state.playerAdvancementsCostGold})} /></td>\r\n                      <td></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Customise cost of player advancements:</td>\r\n                      <td><Form.Check inline type=\"checkbox\" defaultChecked={this.state.customisePlayerAdvancementCosts} onChange={(e) => this.toggleCustomisePlayerAdvancementCosts()} /></td>\r\n                      <td></td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Cost of primary skill:</td>\r\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.costOfPrimarySkill.toString()} onChange={(e) => this.setState({costOfPrimarySkill: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} readOnly={!this.state.customisePlayerAdvancementCosts} /></td>\r\n                      <td>GP</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Cost of secondary skill:</td>\r\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.costOfSecondarySkill.toString()} onChange={(e) => this.setState({costOfSecondarySkill: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} readOnly={!this.state.customisePlayerAdvancementCosts} /></td>\r\n                      <td>GP</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Cost of AV:</td>\r\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.costOfAV.toString()} onChange={(e) => this.setState({costOfAV: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} readOnly={!this.state.customisePlayerAdvancementCosts} /></td>\r\n                      <td>GP</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Cost of MA:</td>\r\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.costOfMA.toString()} onChange={(e) => this.setState({costOfMA: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} readOnly={!this.state.customisePlayerAdvancementCosts} /></td>\r\n                      <td>GP</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Cost of PA:</td>\r\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.costOfPA.toString()} onChange={(e) => this.setState({costOfPA: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} readOnly={!this.state.customisePlayerAdvancementCosts} /></td>\r\n                      <td>GP</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Cost of AG:</td>\r\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.costOfAG.toString()} onChange={(e) => this.setState({costOfAG: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} readOnly={!this.state.customisePlayerAdvancementCosts} /></td>\r\n                      <td>GP</td>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>Cost of ST:</td>\r\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.costOfST.toString()} onChange={(e) => this.setState({costOfST: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} readOnly={!this.state.customisePlayerAdvancementCosts} /></td>\r\n                      <td>GP</td>\r\n                    </tr>\r\n                  </tbody>\r\n                </Table>\r\n              </Col>\r\n            </Row>\r\n          </Tab>\r\n        </Tabs>\r\n\r\n        <Row>\r\n          <Col>\r\n            <Table bordered hover size=\"sm\" className=\"player-table table-striped\">\r\n              <thead>\r\n                <tr>\r\n                  <th className=\"text-center\"></th>\r\n                  <th className=\"text-left\">Name</th>\r\n                  <th className=\"text-left\">Position</th>\r\n                  <th className=\"text-center\">MA</th>\r\n                  <th className=\"text-center\">ST</th>\r\n                  <th className=\"text-center\">AG</th>\r\n                  <th className=\"text-center\">PA</th>\r\n                  <th className=\"text-center\">AV</th>\r\n                  <th className=\"text-left\">Skills</th>\r\n                  <th className=\"text-center\">Value</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {this.state.players.map((player, i) => {\r\n                  return (<tr key={i+1}>\r\n                    <td className=\"player-number\">{i+1}</td>\r\n                    <td className=\"player-name\"><Form.Control type=\"text\" id={i+1} plaintext value={player.name || \"\"} onChange={(e) => this.setPlayerName(parseInt(e.target.id), e.target.value)} /></td>\r\n                    <td className=\"player-position\">\r\n                      <Form.Control as=\"select\" id={i+1} size=\"sm\" plaintext value={player.positionNumber || 0}\r\n                        onChange={(e) => this.setPlayer(parseInt(e.target.id), parseInt(e.target.value))}\r\n                        onFocus={(e) => this.onSetPlayerOpen(e.target.children)}\r\n                        onBlur={(e) => this.onSetPlayerClose(e.target.children)}\r\n                      >\r\n                        <option key=\"0\" value=\"0\">-</option>\r\n                        {this.state.roster.positionals.map((p, i) => {return <option key={i+1} value={i+1}>{p.position}</option>;})}\r\n                      </Form.Control>\r\n                    </td>\r\n                    <td className=\"player-ma\" onClick={() => player.positionNumber && this.showPlayerAdvancementModal(i+1)}>{this.renderPlayerChar(player, \"ma\")}</td>\r\n                    <td className=\"player-st\" onClick={() => player.positionNumber && this.showPlayerAdvancementModal(i+1)}>{this.renderPlayerChar(player, \"st\")}</td>\r\n                    <td className=\"player-ag\" onClick={() => player.positionNumber && this.showPlayerAdvancementModal(i+1)}>{this.renderPlayerChar(player, \"ag\")}</td>\r\n                    <td className=\"player-pa\" onClick={() => player.positionNumber && this.showPlayerAdvancementModal(i+1)}>{this.renderPlayerChar(player, \"pa\")}</td>\r\n                    <td className=\"player-av\" onClick={() => player.positionNumber && this.showPlayerAdvancementModal(i+1)}>{this.renderPlayerChar(player, \"av\")}</td>\r\n                    <td className=\"player-skills\" onClick={() => player.positionNumber && this.showPlayerAdvancementModal(i+1)}>{this.renderPlayerSkills(player)}</td>\r\n                    <td className=\"player-value\">{player.value && this.formatCost(this.getPlayerValue(player))}</td>\r\n                  </tr>);\r\n                })}\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Modal\r\n          show={this.state.showPlayerAdvancementModal}\r\n          onHide={() => this.setState({showPlayerAdvancementModal: false})}\r\n          animation={true}\r\n          size=\"lg\"\r\n          aria-labelledby=\"contained-modal-title-vcenter\"\r\n          centered\r\n        >\r\n          <Modal.Header closeButton>\r\n            <Modal.Title id=\"contained-modal-title-vcenter\">\r\n              {this.getSelectedPlayer() && this.getSelectedPlayer().positionName}\r\n            </Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n\r\n            <Table size=\"sm\" className=\"advancement-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>MA</th>\r\n                  <th>ST</th>\r\n                  <th>AG</th>\r\n                  <th>PA</th>\r\n                  <th>AV</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td className=\"cursor-pointer\" onClick={() => this.toggleSelectedPlayerChar(\"ma\")}>\r\n                    {this.getSelectedPlayer() && this.renderPlayerChar(this.getSelectedPlayer(), \"ma\")}\r\n                  </td>\r\n                  <td className=\"cursor-pointer\" onClick={() => this.toggleSelectedPlayerChar(\"st\")}>\r\n                    {this.getSelectedPlayer() && this.renderPlayerChar(this.getSelectedPlayer(), \"st\")}\r\n                  </td>\r\n                  <td className=\"cursor-pointer\" onClick={() => this.toggleSelectedPlayerChar(\"ag\")}>\r\n                    {this.getSelectedPlayer() && this.renderPlayerChar(this.getSelectedPlayer(), \"ag\")}\r\n                  </td>\r\n                  <td className=\"cursor-pointer\" onClick={() => this.toggleSelectedPlayerChar(\"pa\")}>\r\n                    {this.getSelectedPlayer() && this.renderPlayerChar(this.getSelectedPlayer(), \"pa\")}\r\n                  </td>\r\n                  <td className=\"cursor-pointer\" onClick={() => this.toggleSelectedPlayerChar(\"av\")}>\r\n                    {this.getSelectedPlayer() && this.renderPlayerChar(this.getSelectedPlayer(), \"av\")}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n\r\n            <Table size=\"sm\" className=\"advancement-table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Primary skill access</th>\r\n                  <th>Secondary skill access</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr>\r\n                  <td>{this.getSelectedPlayer() && this.getSelectedPlayer().primaryAccess}</td>\r\n                  <td>{this.getSelectedPlayer() && this.getSelectedPlayer().secondaryAccess}</td>\r\n                </tr>\r\n              </tbody>\r\n            </Table>\r\n\r\n            <Table size=\"sm\" className=\"advancement-table table-striped\">\r\n              <thead>\r\n                <tr>\r\n                  <th>Agility</th>\r\n                  <th>General</th>\r\n                  <th>Mutations</th>\r\n                  <th>Passing</th>\r\n                  <th>Strength</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr><td>{this.renderSkill(skills.catch, \"A\")}</td><td>{this.renderSkill(skills.block, \"G\")}</td><td>{this.renderSkill(skills.bigHand, \"M\")}</td><td>{this.renderSkill(skills.accurate, \"P\")}</td><td>{this.renderSkill(skills.armBar, \"S\")}</td></tr>\r\n                <tr><td>{this.renderSkill(skills.divingCatch, \"A\")}</td><td>{this.renderSkill(skills.dauntless, \"G\")}</td><td>{this.renderSkill(skills.claws, \"M\")}</td><td>{this.renderSkill(skills.cannoneer, \"P\")}</td><td>{this.renderSkill(skills.brawler, \"S\")}</td></tr>\r\n                <tr><td>{this.renderSkill(skills.divingTackle, \"A\")}</td><td>{this.renderSkill(skills.dirtyPlayer(1), \"G\")}</td><td>{this.renderSkill(skills.disturbingPresence, \"M\")}</td><td>{this.renderSkill(skills.cloudBurster, \"P\")}</td><td>{this.renderSkill(skills.breakTackle, \"S\")}</td></tr>\r\n                <tr><td>{this.renderSkill(skills.dodge, \"A\")}</td><td>{this.renderSkill(skills.fend, \"G\")}</td><td>{this.renderSkill(skills.extraArms, \"M\")}</td><td>{this.renderSkill(skills.dumpOff, \"P\")}</td><td>{this.renderSkill(skills.grab, \"S\")}</td></tr>\r\n                <tr><td>{this.renderSkill(skills.defensive, \"A\")}</td><td>{this.renderSkill(skills.frenzy, \"G\")}</td><td>{this.renderSkill(skills.foulAppearance, \"M\")}</td><td>{this.renderSkill(skills.fumblerooskie, \"P\")}</td><td>{this.renderSkill(skills.guard, \"S\")}</td></tr>\r\n                <tr><td>{this.renderSkill(skills.jumpUp, \"A\")}</td><td>{this.renderSkill(skills.kick, \"G\")}</td><td>{this.renderSkill(skills.horns, \"M\")}</td><td>{this.renderSkill(skills.hailMaryPass, \"P\")}</td><td>{this.renderSkill(skills.juggernaut, \"S\")}</td></tr>\r\n                <tr><td>{this.renderSkill(skills.leap, \"A\")}</td><td>{this.renderSkill(skills.pro, \"G\")}</td><td>{this.renderSkill(skills.ironHardSkin, \"M\")}</td><td>{this.renderSkill(skills.leader, \"P\")}</td><td>{this.renderSkill(skills.mightyBlow(1), \"S\")}</td></tr>\r\n                <tr><td>{this.renderSkill(skills.safePairOfHands, \"A\")}</td><td>{this.renderSkill(skills.shadowing, \"G\")}</td><td>{this.renderSkill(skills.monstrousMouth, \"M\")}</td><td>{this.renderSkill(skills.nervesOfSteel, \"P\")}</td><td>{this.renderSkill(skills.multipleBlock, \"S\")}</td></tr>\r\n                <tr><td>{this.renderSkill(skills.sideStep, \"A\")}</td><td>{this.renderSkill(skills.stripBall, \"G\")}</td><td>{this.renderSkill(skills.prehensileTail, \"M\")}</td><td>{this.renderSkill(skills.onTheBall, \"P\")}</td><td>{this.renderSkill(skills.pileDriver, \"S\")}</td></tr>\r\n                <tr><td>{this.renderSkill(skills.sneakyGit, \"A\")}</td><td>{this.renderSkill(skills.sureHands, \"G\")}</td><td>{this.renderSkill(skills.tentacles, \"M\")}</td><td>{this.renderSkill(skills.pass, \"P\")}</td><td>{this.renderSkill(skills.standFirm, \"S\")}</td></tr>\r\n                <tr><td>{this.renderSkill(skills.sprint, \"A\")}</td><td>{this.renderSkill(skills.tackle, \"G\")}</td><td>{this.renderSkill(skills.twoHeads, \"M\")}</td><td>{this.renderSkill(skills.runningPass, \"P\")}</td><td>{this.renderSkill(skills.strongArm, \"S\")}</td></tr>\r\n                <tr><td>{this.renderSkill(skills.sureFeet, \"A\")}</td><td>{this.renderSkill(skills.wrestle, \"G\")}</td><td>{this.renderSkill(skills.veryLongLegs, \"M\")}</td><td>{this.renderSkill(skills.safePass, \"P\")}</td><td>{this.renderSkill(skills.thickSkull, \"S\")}</td></tr>\r\n              </tbody>\r\n            </Table>\r\n          </Modal.Body>\r\n        </Modal>\r\n\r\n      <Button onClick={() => this.loadTeam()} className=\"load\">Load team</Button>\r\n      <Button onClick={() => this.saveTeam()} className=\"save\">Save team</Button>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default Team;\r\n","import React from \"react\";\r\n\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport ReactGA from \"react-ga\";\r\n\r\nimport Team from \"./components/Team\";\r\nimport \"./App.css\";\r\n\r\n\r\nReactGA.initialize(\"UA-191514354-1\");\r\nReactGA.pageview(window.location.href);\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header>\r\n        <Container><Row><Col id=\"header\"><span className=\"text-orange\">Nuflheim</span> Team Draft List</Col></Row></Container>\r\n      </header>\r\n      <main>\r\n        <Team />\r\n      </main>\r\n      <footer>\r\n        <Container>\r\n          <Row>\r\n            <Col>\r\n              <p>~ Nuflheim ~</p>\r\n              <p><small>This is an unofficial and non-commercial fan website.</small></p>\r\n              <p><small>This website uses <a href=\"https://www.google.com/policies/privacy/partners/\" rel=\"noreferrer\" target=\"_blank\">Google Analytics</a>.</small></p>\r\n              <p><small>Please report any issues via <a href=\"https://github.com/jonasbusk/nuflheim\" rel=\"noreferrer\" target=\"_blank\">GitHub</a>.</small></p>\r\n              <p>\r\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill=\"currentColor\" className=\"bi bi-star-fill\" viewBox=\"0 0 16 16\"><path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"/></svg> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-star-fill\" viewBox=\"0 0 16 16\"><path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"/></svg> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill=\"currentColor\" className=\"bi bi-star-fill\" viewBox=\"0 0 16 16\"><path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"/></svg>\r\n              </p>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won\"t work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let\"s check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It\"s the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can\"t reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}