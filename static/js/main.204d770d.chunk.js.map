{"version":3,"sources":["data.js","components/Team.js","App.js","serviceWorker.js","index.js"],"names":["skills","x","positional","quantity","position","cost","ma","st","ag","pa","av","primaryAccess","secondaryAccess","roster","name","positionals","reRollsCost","apothecaryAllowed","tier","rosters","player","positionNumber","positionName","value","maMod","stMod","agMod","paMod","avMod","primarySkills","secondarySkills","Team","state","budget","playerAdvancementsCostGold","reRollsCostDouble","customisePlayerAdvancementCosts","costOfPrimarySkill","costOfSecondarySkill","costOfAV","costOfMA","costOfPA","costOfAG","costOfST","coach","reRolls","dedicatedFans","assistantCoaches","cheerleaders","apothecary","players","Array","fill","map","showPlayerAdvancementModal","selectedPlayerNumber","setRoster","rosterIndex","setState","getReRollsCost","setPlayer","playerNumber","p","setPlayerName","playerName","getSelectedPlayer","setSelectedPlayer","renderPlayerSkills","s","className","concat","i","renderPlayerChar","char","interactive","mod","includes","toggleSelectedPlayerChar","playerCharMayBeImproved","renderSkill","skill","category","onClick","removeSkill","addSkill","push","sort","filter","getPlayerValue","length","getTeamValue","tv","reduce","total","getTreasury","formatCost","toString","replace","toggleCustomisePlayerAdvancementCosts","Container","Tabs","defaultActiveKey","Tab","eventKey","title","Row","Col","md","Table","borderless","size","Form","Control","type","this","onChange","e","target","as","readOnly","Math","min","max","parseInt","defaultValue","plaintext","Number","MAX_SAFE_INTEGER","Check","inline","defaultChecked","bordered","hover","id","Modal","show","onHide","animation","aria-labelledby","centered","Header","closeButton","Title","Body","Component","ReactGA","initialize","pageview","window","location","href","App","rel","xmlns","width","height","viewBox","d","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.204d770d.chunk.js","sourcesContent":["const skills = {\n  // Agility\n  catch: \"Catch\",\n  divingCatch: \"Diving Catch\",\n  divingTackle: \"Diving Tackle\",\n  dodge: \"Dodge\",\n  defensive: \"Defensive\",\n  jumpUp: \"Jump Up\",\n  leap: \"Leap\",\n  safePairOfHands: \"Safe Pair of Hands\",\n  sideStep: \"Side Step\",\n  sneakyGit: \"Sneaky Git\",\n  sprint: \"Sprint\",\n  sureFeet: \"Sure Feet\",\n  // General\n  block: \"Block\",\n  dauntless: \"Dauntless\",\n  dirtyPlayer: (x) => \"Dirty Player (+\" + x + \")\",\n  fend: \"Fend\",\n  frenzy: \"Frenzy\",\n  kick: \"Kick\",\n  pro: \"Pro\",\n  shadowing: \"Shadowing\",\n  stripBall: \"Strip Ball\",\n  sureHands: \"Sure Hands\",\n  tackle: \"Tackle\",\n  wrestle: \"Wrestle\",\n  // Mutation\n  bigHand: \"Big Hand\",\n  claws: \"Claws\",\n  disturbingPresence: \"Disturbing Presence\",\n  extraArms: \"Extra Arms\",\n  foulAppearance: \"Foul Appearance\",\n  horns: \"Horns\",\n  ironHardSkin: \"Iron Hard Skin\",\n  monstrousMouth: \"Monstrous Mouth\",\n  prehensileTail: \"Prehensile Tail\",\n  tentacles: \"Tentacles\",\n  twoHeads: \"Two Heads\",\n  veryLongLegs: \"Very Long Legs\",\n  // Passing\n  accurate: \"Accurate\",\n  cannoneer: \"Cannoneer\",\n  cloudBurster: \"Cloud Burster\",\n  dumpOff: \"Dump-off\",\n  fumblerooskie: \"Fumblerooskie\",\n  hailMaryPass: \"Hail Mary Pass\",\n  leader: \"Leader\",\n  nervesOfSteel: \"Nerves of Steel\",\n  onTheBall: \"On the Ball\",\n  pass: \"Pass\",\n  runningPass: \"Running Pass\",\n  safePass: \"Safe Pass\",\n  // Strength\n  armBar: \"Arm Bar\",\n  brawler: \"Brawler\",\n  breakTackle: \"Break Tackle\",\n  grab: \"Grab\",\n  guard: \"Guard\",\n  juggernaut: \"Juggernaut\",\n  mightyBlow: (x) => \"Mighty Blow (+\" + x + \")\",\n  multipleBlock: \"Multiple Block\",\n  pileDriver: \"Pile Driver\",\n  standFirm: \"Stand Firm\",\n  strongArm: \"Strong Arm\",\n  thickSkull: \"Thick Skull\",\n  // Traits\n  animalSavagery: \"Animal Savagery\",\n  animosity: (x) => \"Animosity (\" + x + \")\",\n  alwaysHungry: \"Always Hungry\",\n  ballAndChain: \"Ball & Chain\",\n  bombardier: \"Bombardier\",\n  boneHead: \"Bone Head\",\n  chainsaw: \"Chainsaw\",\n  decay: \"Decay\",\n  hypnoticGaze: \"Hypnotic Gaze\",\n  kickTeamMate: \"Kick Team Mate\",\n  loner: (x) => \"Loner (\" + x + \"+)\",\n  noHands: \"No Hands\",\n  plagueRidden: \"Plague Ridden\",\n  pogoStick: \"Pogo Stick\",\n  projectileVomit: \"Projectile Vomit\",\n  reallyStupid: \"Really Stupid\",\n  regeneration: \"Regeneration\",\n  rightStuff: \"Right Stuff\",\n  secretWeapon: \"Secret Weapon\",\n  stab: \"Stab\",\n  stunty: \"Stunty\",\n  swarming: \"Swarming\",\n  swoop: \"Swoop\",\n  takeRoot: \"Take Root\",\n  titchy: \"Titchy\",\n  timmmber: \"Timmm-ber!\",\n  throwTeamMate: \"Throw Team-mate\",\n  unchannelledFury: \"Unchannelled Fury\"\n};\n\n\nconst positional = (quantity, position, cost, ma, st, ag, pa, av, skills, primaryAccess, secondaryAccess) => {\n  return {\n    quantity: quantity,\n    position: position,\n    cost: cost,\n    ma: ma,\n    st: st,\n    ag: ag,\n    pa: pa,\n    av: av,\n    skills: skills,\n    primaryAccess: primaryAccess,\n    secondaryAccess: secondaryAccess,\n  };\n};\n\n\nconst roster = (name, positionals, reRollsCost, apothecaryAllowed, tier) => {\n  return {\n    name: name,\n    positionals: positionals,\n    reRollsCost: reRollsCost,\n    apothecaryAllowed: apothecaryAllowed,\n    tier: tier,\n  };\n};\n\n\nconst rosters = [\n  roster(\n    \"Amazon\",\n    [\n      positional(16, \"Linewoman\", 50000, 6, 3, 3, 4, 8, [skills.dodge], \"G\", \"AS\"),\n      positional(2, \"Thrower\", 75000, 6, 3, 3, 3, 8, [skills.dodge, skills.pass], \"GP\", \"AS\"),\n      positional(2, \"Catcher\", 75000, 6, 3, 3, 5, 8, [skills.catch, skills.dodge], \"AG\", \"S\"),\n      positional(4, \"Blitzer\", 90000, 6, 3, 3, 5, 8, [skills.block, skills.dodge], \"GS\", \"A\")\n    ],\n    50000,\n    true,\n    1,\n  ),\n  roster(\n    \"Black Orc\",\n    [\n      positional(12, \"Goblin Bruiser\", 45000, 6, 2, 3, 4, 8, [skills.dodge, skills.rightStuff, skills.stunty, skills.thickSkull], \"A\", \"GPS\"),\n      positional(6, \"Black Orc\", 90000, 4, 4, 4, 5, 10, [skills.brawler, skills.grab], \"GS\", \"AP\"),\n      positional(1, \"Trained Troll\", 115000, 4, 5, 5, 5, 10, [skills.alwaysHungry, skills.loner(3), skills.mightyBlow(1), skills.projectileVomit, skills.reallyStupid, skills.regeneration, skills.throwTeamMate], \"S\", \"AGP\")\n    ],\n    60000,\n    true,\n    2,\n  ),\n  roster(\n    \"Chaos Chosen\",\n    [\n      positional(16, \"Beastman Runner\", 60000, 6, 3, 3, 4, 9, [skills.horns], \"GMS\", \"AP\"),\n      positional(4, \"Chosen Blocker\", 100000, 5, 4, 3, 5, 10, [], \"GMS\", \"A\"),\n      positional(1, \"Chaos Troll\", 115000, 4, 5, 5, 5, 10, [skills.alwaysHungry, skills.loner(4), skills.mightyBlow(1), skills.projectileVomit, skills.reallyStupid, skills.regeneration, skills.throwTeamMate], \"MS\", \"AG\"),\n      positional(1, \"Chaos Ogre\", 140000, 5, 5, 4, 5, 10, [skills.boneHead, skills.loner(4), skills.mightyBlow(1), skills.thickSkull, skills.throwTeamMate], \"MS\", \"AG\"),\n      positional(1, \"Minotaur\", 150000, 5, 5, 4, null, 9, [skills.loner(4), skills.frenzy, skills.horns, skills.mightyBlow(1), skills.thickSkull, skills.unchannelledFury], \"MS\", \"AG\")\n    ],\n    60000,\n    true,\n    2,\n  ),\n  roster(\n    \"Chaos Dwarf\",\n    [\n      positional(16, \"Hobgoblin\", 40000, 6, 3, 3, 4, 8, [], \"G\", \"AS\"),\n      positional(6, \"Blocker\", 70000, 4, 3, 4, 6, 10, [skills.block, skills.tackle, skills.thickSkull], \"GS\", \"AM\"),\n      positional(2, \"Bull Centaur\", 130000, 6, 4, 4, 6, 10, [skills.sprint, skills.sureFeet, skills.thickSkull], \"GS\", \"A\"),\n      positional(1, \"Enslaved Minotaur\", 150000, 5, 5, 4, null, 9, [skills.animalSavagery, skills.frenzy, skills.horns, skills.loner(4), skills.mightyBlow(1), skills.thickSkull], \"S\", \"AGM\")\n    ],\n    70000,\n    true,\n    1,\n  ),\n  roster(\n    \"Chaos Renegade\",\n    [\n      positional(12, \"Human Lineman\", 50000, 6, 3, 3, 4, 9, [], \"GM\", \"AS\"),\n      positional(1, \"Human Thrower\", 75000, 6, 3, 3, 3, 9, [skills.animosity(\"all team-mates\"), skills.pass, skills.safePairOfHands], \"GMP\", \"AS\"),\n      positional(1, \"Goblin\", 40000, 6, 2, 3, 4, 8, [skills.animosity(\"all team-mates\"), skills.dodge, skills.rightStuff, skills.stunty], \"AM\", \"GP\"),\n      positional(1, \"Orc\", 50000, 5, 3, 3, 5, 10, [skills.animosity(\"all team-mates\")], \"GM\", \"AS\"),\n      positional(1, \"Skaven\", 50000, 7, 3, 3, 4, 8, [skills.animosity(\"all team-mates\")], \"GM\", \"AS\"),\n      positional(1, \"Dark Elf\", 75000, 6, 3, 2, 3, 9, [skills.animosity(\"all team-mates\")], \"AGM\", \"PS\"),\n      positional(1, \"Troll\", 115000, 4, 5, 5, 5, 10, [skills.alwaysHungry, skills.loner(4), skills.mightyBlow(1), skills.projectileVomit, skills.reallyStupid, skills.regeneration, skills.throwTeamMate], \"S\", \"AGM\"),\n      positional(1, \"Ogre\", 140000, 5, 5, 4, 5, 10, [skills.boneHead, skills.loner(4), skills.mightyBlow(1), skills.thickSkull, skills.throwTeamMate], \"S\", \"AGM\"),\n      positional(1, \"Minotaur\", 150000, 5, 5, 4, null, 9, [skills.loner(4), skills.frenzy, skills.horns, skills.mightyBlow(1), skills.thickSkull, skills.unchannelledFury], \"S\", \"AGM\"),\n      positional(1, \"Rat Ogre\", 150000, 6, 5, 4, null, 9, [skills.animalSavagery, skills.frenzy, skills.loner(4), skills.mightyBlow(1), skills.prehensileTail], \"S\", \"AGM\")\n    ],\n    70000,\n    true,\n    2,\n  ),\n  roster(\n    \"Dark Elf\",\n    [\n      positional(12, \"Lineman\", 70000, 6, 3, 2, 4, 9, [], \"AG\", \"S\"),\n      positional(2, \"Runner\", 80000, 7, 3, 2, 3, 8, [skills.dumpOff], \"AGP\", \"S\"),\n      positional(4, \"Blitzer\", 100000, 7, 3, 2, 4, 9, [skills.block], \"AG\", \"PS\"),\n      positional(2, \"Assassin\", 85000, 7, 3, 2, 5, 8, [skills.shadowing, skills.stab], \"AG\", \"PS\"),\n      positional(2, \"Witch Elf\", 110000, 7, 3, 2, 5, 8, [skills.dodge, skills.frenzy, skills.jumpUp], \"AG\", \"PS\")\n    ],\n    50000,\n    true,\n    1,\n  ),\n  roster(\n    \"Dwarf\",\n    [\n      positional(12, \"Blocker\", 70000, 4, 3, 4, 5, 10, [skills.block, skills.tackle, skills.thickSkull], \"GS\", \"A\"),\n      positional(2, \"Runner\", 85000, 6, 3, 3, 4, 9, [skills.sureHands, skills.thickSkull], \"GP\", \"AS\"),\n      positional(2, \"Blitzer\", 80000, 5, 3, 3, 4, 10, [skills.block, skills.thickSkull], \"GS\", \"AP\"),\n      positional(2, \"Troll Slayer\", 95000, 5, 3, 4, null, 9, [skills.block, skills.dauntless, skills.frenzy, skills.thickSkull], \"GS\", \"A\"),\n      positional(1, \"Deathroller\", 170000, 4, 7, 5, null, 11, [skills.breakTackle, skills.dirtyPlayer(2), skills.juggernaut, skills.loner(5), skills.mightyBlow(1), skills.noHands, skills.secretWeapon, skills.standFirm], \"S\", \"AG\")\n    ],\n    50000,\n    true,\n    1,\n  ),\n  roster(\n    \"Elven Union\",\n    [\n      positional(12, \"Lineman\", 60000, 6, 3, 2, 4, 8, [], \"AG\", \"S\"),\n      positional(2, \"Thrower\", 75000, 6, 3, 2, 2, 8, [skills.pass], \"AGP\", \"S\"),\n      positional(4, \"Catcher\", 100000, 8, 3, 2, 4, 8, [skills.catch, skills.nervesOfSteel], \"AG\", \"S\"),\n      positional(2, \"Blitzer\", 115000, 7, 3, 2, 3, 9, [skills.block, skills.sideStep], \"AG\", \"PS\")\n    ],\n    50000,\n    true,\n    2,\n  ),\n  roster(\n    \"Goblin\",\n    [\n      positional(16, \"Lineman\", 40000, 6, 2, 3, 4, 8, [skills.dodge, skills.rightStuff, skills.stunty], \"A\", \"GPS\"),\n      positional(1, \"Bomma\", 45000, 6, 2, 3, 4, 8, [skills.bombardier, skills.dodge, skills.secretWeapon, skills.stunty], \"A\", \"GPS\"),\n      positional(1, \"Looney\", 40000, 6, 2, 3, null, 8, [skills.chainsaw, skills.secretWeapon, skills.stunty], \"A\", \"GS\"),\n      positional(1, \"Fanatic\", 70000, 3, 7, 3, null, 8, [skills.ballAndChain, skills.noHands, skills.secretWeapon, skills.stunty], \"S\", \"AG\"),\n      positional(1, \"Pogoer\", 75000, 7, 2, 3, 5, 8, [skills.dodge, skills.pogoStick, skills.stunty], \"A\", \"GPS\"),\n      positional(1, \"Ooligan\", 65000, 6, 2, 3, 6, 8, [skills.dirtyPlayer(1), skills.disturbingPresence, skills.dodge, skills.rightStuff, skills.stunty], \"A\", \"GPS\"),\n      positional(1, \"Doom Diver\", 60000, 6, 2, 3, 6, 8, [skills.rightStuff, skills.stunty, skills.swoop], \"A\", \"GS\"),\n      positional(2, \"Trained Troll\", 115000, 4, 5, 5, 5, 10, [skills.alwaysHungry, skills.loner(3), skills.mightyBlow(1), skills.projectileVomit, skills.reallyStupid, skills.regeneration, skills.throwTeamMate], \"S\", \"AGP\")\n    ],\n    60000,\n    true,\n    3,\n  ),\n  roster(\n    \"Halfling\",\n    [\n      positional(16, \"Hopeful\", 30000, 5, 2, 3, 4, 7, [skills.dodge, skills.rightStuff, skills.stunty], \"A\", \"GS\"),\n      positional(2, \"Hefty\", 50000, 5, 2, 3, 3, 8, [skills.dodge, skills.fend, skills.stunty], \"AP\", \"GS\"),\n      positional(2, \"Catcher\", 55000, 5, 2, 3, 5, 7, [skills.catch, skills.dodge, skills.rightStuff, skills.sprint, skills.stunty], \"A\", \"GS\"),\n      positional(2, \"Altern Forest Treeman\", 120000, 2, 6, 5, 5, 11, [skills.mightyBlow(1), skills.standFirm, skills.strongArm, skills.takeRoot, skills.thickSkull, skills.throwTeamMate, skills.timmmber], \"S\", \"AGP\")\n    ],\n    60000,\n    true,\n    3,\n  ),\n  roster(\n    \"High Elf\",\n    [\n      positional(16, \"Lineman\", 70000, 6, 3, 2, 4, 9, [], \"AG\", \"PS\"),\n      positional(2, \"Thrower\", 100000, 6, 3, 2, 2, 9, [skills.cloudBurster, skills.pass, skills.safePass], \"AGP\", \"S\"),\n      positional(4, \"Catcher\", 90000, 8, 3, 2, 5, 8, [skills.catch], \"AG\", \"S\"),\n      positional(2, \"Blitzer\", 100000, 7, 3, 2, 4, 9, [skills.block], \"AG\", \"PS\")\n    ],\n    50000,\n    true,\n    2,\n  ),\n  roster(\n    \"Human\",\n    [\n      positional(16, \"Lineman\", 50000, 6, 3, 3, 4, 9, [], \"G\", \"AS\"),\n      positional(2, \"Thrower\", 80000, 6, 3, 3, 2, 9, [skills.pass, skills.sureHands], \"GP\", \"AS\"),\n      positional(4, \"Catcher\", 65000, 8, 2, 3, 5, 8, [skills.catch, skills.dodge], \"AG\", \"SP\"),\n      positional(4, \"Blitzer\", 85000, 7, 3, 3, 4, 9, [skills.block], \"GS\", \"AP\"),\n      positional(3, \"Halfling Hopeful\", 30000, 5, 2, 3, 4, 7, [skills.dodge, skills.rightStuff, skills.stunty], \"A\", \"GS\"),\n      positional(1, \"Ogre\", 140000, 5, 5, 4, 5, 10, [skills.boneHead, skills.loner(4), skills.mightyBlow(1), skills.thickSkull, skills.throwTeamMate], \"S\", \"AG\")\n    ],\n    50000,\n    true,\n    1,\n  ),\n  roster(\n    \"Imperial Nobility\",\n    [\n      positional(12, \"Retainer Lineman\", 45000, 6, 3, 4, 4, 8, [skills.fend], \"G\", \"AS\"),\n      positional(2, \"Thrower\", 75000, 6, 3, 3, 3, 9, [skills.pass, skills.runningPass], \"GP\", \"AS\"),\n      positional(2, \"Noble Blitzer\", 105000, 7, 3, 3, 4, 9, [skills.block, skills.catch], \"AG\", \"PS\"),\n      positional(4, \"Bodyguard\", 90000, 6, 3, 3, 5, 9, [skills.standFirm, skills.wrestle], \"GS\", \"A\"),\n      positional(1, \"Ogre\", 140000, 5, 5, 4, 5, 10, [skills.boneHead, skills.loner(4), skills.mightyBlow(1), skills.thickSkull, skills.throwTeamMate], \"S\", \"AG\")\n    ],\n    70000,\n    true,\n    2,\n  ),\n  roster(\n    \"Khorne\",\n    [\n      positional(16, \"Pit Fighter\", 60000, 6, 3, 3, 4, 9, [skills.frenzy], \"G\", \"AS\"),\n      positional(4, \"Bloodletter\", 80000, 6, 3, 3, 4, 8, [skills.horns, skills.juggernaut, skills.regeneration], \"AGS\", \"P\"),\n      positional(2, \"Herald\", 90000, 6, 3, 3, 5, 9, [skills.frenzy, skills.horns, skills.juggernaut], \"GS\", \"AP\"),\n      positional(1, \"Bloodthirster\", 180000, 6, 5, 5, null, 10, [skills.claws, skills.frenzy, skills.horns, skills.juggernaut, skills.loner(4), skills.regeneration, skills.unchannelledFury], \"S\", \"AG\"),\n    ],\n    70000,\n    true,\n    2,\n  ),\n  roster(\n    \"Lizardmen\",\n    [\n      positional(12, \"Skink Runner\", 60000, 8, 2, 3, 4, 8, [skills.dodge, skills.stunty], \"A\", \"GPS\"),\n      positional(2, \"Chameleon Skink\", 70000, 7, 2, 3, 3, 8, [skills.dodge, skills.onTheBall, skills.shadowing, skills.stunty], \"A\", \"GPS\"),\n      positional(6, \"Saurus Blocker\", 85000, 6, 4, 5, 6, 10, [], \"GS\", \"A\"),\n      positional(1, \"Kroxigor\", 140000, 6, 5, 5, null, 10, [skills.boneHead, skills.loner(4), skills.mightyBlow(1), skills.prehensileTail, skills.thickSkull], \"S\", \"AG\")\n    ],\n    70000,\n    true,\n    1,\n  ),\n  roster(\n    \"Necromantic Horror\",\n    [\n      positional(16, \"Zombie\", 40000, 4, 3, 4, null, 9, [skills.regeneration], \"G\", \"AS\"),\n      positional(2, \"Ghoul Runner\", 75000, 7, 3, 3, 4, 8, [skills.dodge], \"AG\", \"PS\"),\n      positional(2, \"Wraith\", 95000, 6, 3, 3, null, 9, [skills.block, skills.foulAppearance, skills.noHands, skills.regeneration, skills.sideStep], \"GS\", \"A\"),\n      positional(2, \"Werewolf\", 125000, 8, 3, 3, 4, 9, [skills.claws, skills.frenzy, skills.regeneration], \"AG\", \"PS\"),\n      positional(2, \"Flesh Golem\", 115000, 4, 4, 4, null, 10, [skills.regeneration, skills.standFirm, skills.thickSkull], \"GS\", \"A\")\n    ],\n    70000,\n    false,\n    2,\n  ),\n  roster(\n    \"Norse\",\n    [\n      positional(12, \"Lineman\", 50000, 6, 3, 3, 4, 8, [skills.block], \"G\", \"AS\"),\n      positional(2, \"Thrower\", 70000, 6, 3, 3, 3, 8, [skills.block, skills.pass], \"GP\", \"AS\"),\n      positional(2, \"Catcher\", 90000, 7, 3, 3, 5, 8, [skills.block, skills.dauntless], \"AG\", \"S\"),\n      positional(2, \"Berserker\", 90000, 6, 3, 3, 5, 8, [skills.block, skills.frenzy, skills.jumpUp], \"GS\", \"A\"),\n      positional(2, \"Ulfwerener\", 105000, 6, 4, 4, null, 9, [skills.frenzy], \"GS\", \"A\"),\n      positional(1, \"Yhetee\", 140000, 5, 5, 5, null, 9, [skills.claws, skills.disturbingPresence, skills.frenzy, skills.loner(4), skills.unchannelledFury], \"S\", \"AG\")\n    ],\n    60000,\n    true,\n    1,\n  ),\n  roster(\n    \"Nurgle\",\n    [\n      positional(12, \"Rotter\", 35000, 5, 3, 4, 6, 9, [skills.decay, skills.plagueRidden], \"GM\", \"AS\"),\n      positional(4, \"Pestigor\", 75000, 6, 3, 3, 4, 9, [skills.horns, skills.plagueRidden, skills.regeneration], \"GMS\", \"AP\"),\n      positional(4, \"Bloater\", 115000, 4, 4, 4, 6, 10, [skills.disturbingPresence, skills.foulAppearance, skills.plagueRidden, skills.regeneration], \"GMS\", \"A\"),\n      positional(1, \"Rotspawn\", 140000, 4, 5, 5, null, 10, [skills.disturbingPresence, skills.foulAppearance, skills.loner(4), skills.mightyBlow(1), skills.plagueRidden, skills.reallyStupid, skills.regeneration, skills.tentacles], \"S\", \"AGM\")\n    ],\n    70000,\n    false,\n    2,\n  ),\n  roster(\n    \"Ogre\",\n    [\n      positional(16, \"Gnoblar\", 15000, 5, 1, 3, 5, 6, [skills.dodge, skills.rightStuff, skills.sideStep, skills.stunty, skills.titchy], \"A\", \"G\"),\n      positional(1, \"Ogre Runt Punter\", 145000, 5, 5, 4, 4, 10, [skills.boneHead, skills.kickTeamMate, skills.mightyBlow(1), skills.thickSkull], \"PS\", \"AG\"),\n      positional(5, \"Ogre Blocker\", 140000, 5, 5, 4, 5, 10, [skills.boneHead, skills.mightyBlow(1), skills.thickSkull, skills.throwTeamMate], \"S\", \"AGP\")\n    ],\n    70000,\n    true,\n    3,\n  ),\n  roster(\n    \"Old World Alliance\",\n    [\n      positional(12, \"Human Lineman\", 50000, 6, 3, 3, 4, 9, [], \"G\", \"AS\"),\n      positional(1, \"Human Thrower\", 80000, 6, 3, 3, 3, 9, [skills.animosity(\"all Dwarf and Hafling team-mates\"), skills.pass, skills.sureHands], \"GP\", \"AS\"),\n      positional(1, \"Human Catcher\", 65000, 8, 2, 3, 5, 8, [skills.animosity(\"all Dwarf and Hafling team-mates\"), skills.catch, skills.dodge], \"AG\", \"S\"),\n      positional(1, \"Human Blitzer\", 90000, 7, 3, 3, 4, 9, [skills.animosity(\"all Dwarf and Hafling team-mates\"), skills.block], \"GS\", \"A\"),\n      positional(2, \"Dwarf Blocker\", 75000, 4, 3, 4, 5, 10, [skills.armBar, skills.brawler, skills.loner(3), skills.thickSkull], \"GS\", \"A\"),\n      positional(1, \"Dwarf Runner\", 85000, 6, 3, 3, 4, 9, [skills.loner(3), skills.sureHands, skills.thickSkull], \"GP\", \"AS\"),\n      positional(1, \"Dwarf Blitzer\", 80000, 5, 3, 3, 4, 10, [skills.block, skills.loner(3), skills.thickSkull], \"GS\", \"A\"),\n      positional(1, \"Dwarf Troll Slayer\", 95000, 5, 3, 4, null, 9, [skills.block, skills.dauntless, skills.frenzy, skills.loner(3), skills.thickSkull], \"GS\", \"A\"),\n      positional(2, \"Halfling Hopeful\", 30000, 5, 2, 3, 4, 7, [skills.animosity(\"all Dwarf and Human team-mates\"), skills.dodge, skills.rightStuff, skills.stunty], \"A\", \"GS\"),\n      positional(1, \"Ogre\", 140000, 5, 5, 4, 5, 10, [skills.boneHead, skills.loner(4), skills.mightyBlow(1), skills.thickSkull, skills.throwTeamMate], \"S\", \"AG\"),\n      positional(1, \"Altern Forest Treeman\", 120000, 2, 6, 5, 5, 11, [skills.loner(4), skills.mightyBlow(1), skills.standFirm, skills.strongArm, skills.takeRoot, skills.thickSkull, skills.throwTeamMate, skills.timmmber], \"S\", \"AGP\")\n    ],\n    70000,\n    true,\n    1,\n  ),\n  roster(\n    \"Orc\",\n    [\n      positional(16, \"Lineman\", 50000, 5, 3, 3, 4, 10, [skills.animosity(\"Orc Linemen\")], \"G\", \"AS\"),\n      positional(2, \"Thrower\", 65000, 5, 3, 3, 3, 9, [skills.animosity(\"all team-mates\"), skills.pass, skills.sureHands], \"GP\", \"AS\"),\n      positional(4, \"Blitzer\", 80000, 6, 3, 3, 4, 10, [skills.animosity(\"all team-mates\"), skills.block], \"GS\", \"AP\"),\n      positional(4, \"Big Un Blocker\", 90000, 5, 4, 4, null, 10, [skills.animosity(\"Big Un Blockers\")], \"GS\", \"A\"),\n      positional(4, \"Goblin\", 40000, 6, 2, 3, 4, 8, [skills.dodge, skills.rightStuff, skills.stunty], \"A\", \"GS\"),\n      positional(1, \"Untrained Troll\", 115000, 4, 5, 5, 5, 10, [skills.alwaysHungry, skills.loner(4), skills.mightyBlow(1), skills.projectileVomit, skills.reallyStupid, skills.regeneration, skills.throwTeamMate], \"S\", \"AGP\")\n    ],\n    60000,\n    true,\n    1,\n  ),\n  roster(\n    \"Shambling Undead\",\n    [\n      positional(12, \"Skeleton\", 40000, 5, 3, 4, 6, 8, [skills.regeneration, skills.thickSkull], \"G\", \"AS\"),\n      positional(12, \"Zombie\", 40000, 4, 3, 4, null, 9, [skills.regeneration], \"G\", \"AS\"),\n      positional(4, \"Ghoul Runner\", 75000, 7, 3, 3, 4, 8, [skills.dodge], \"AG\", \"PS\"),\n      positional(2, \"Wight Blitzer\", 90000, 6, 3, 3, 5, 9, [skills.block, skills.regeneration], \"GS\", \"AP\"),\n      positional(2, \"Mummy\", 125000, 3, 5, 5, null, 10, [skills.mightyBlow(1), skills.regeneration], \"S\", \"AG\")\n    ],\n    70000,\n    false,\n    1,\n  ),\n  roster(\n    \"Skaven\",\n    [\n      positional(16, \"Clanrat Lineman\", 50000, 7, 3, 3, 4, 8, [], \"G\", \"AMS\"),\n      positional(2, \"Thrower\", 85000, 7, 3, 3, 2, 8, [skills.pass, skills.sureHands], \"GP\", \"AMS\"),\n      positional(4, \"Gutter Runner\", 85000, 9, 2, 2, 4, 8, [skills.dodge], \"AG\", \"MPS\"),\n      positional(2, \"Blitzer\", 90000, 7, 3, 3, 5, 9, [skills.block], \"GS\", \"AMP\"),\n      positional(1, \"Rat Ogre\", 150000, 6, 5, 4, null, 9, [skills.animalSavagery, skills.frenzy, skills.loner(4), skills.mightyBlow(1), skills.prehensileTail], \"S\", \"AGM\")\n    ],\n    50000,\n    true,\n    1,\n  ),\n  roster(\n    \"Slann\",\n    [\n      positional(16, \"Lineman\", 60000, 6, 3, 3, 4, 9, [skills.pogoStick, skills.veryLongLegs], \"G\", \"AS\"),\n      positional(4, \"Catcher\", 80000, 7, 2, 2, 4, 8, [skills.divingCatch, skills.pogoStick, skills.veryLongLegs], \"AG\", \"PS\"),\n      positional(4, \"Blitzer\", 110000, 7, 3, 3, 4, 9, [skills.divingTackle, skills.jumpUp, skills.pogoStick, skills.veryLongLegs], \"AGS\", \"P\"),\n      positional(1, \"Kroxigor\", 140000, 6, 5, 5, null, 10, [skills.boneHead, skills.loner(4), skills.mightyBlow(1), skills.prehensileTail, skills.thickSkull], \"S\", \"AG\")\n    ],\n    50000,\n    true,\n    2,\n  ),\n  roster(\n    \"Snotling\",\n    [\n      positional(16, \"Snotling Lineman\", 15000, 5, 1, 3, 5, 6, [skills.dodge, skills.rightStuff, skills.sideStep, skills.stunty, skills.swarming, skills.titchy], \"A\", \"G\"),\n      positional(2, \"Fungus Flinga\", 30000, 5, 1, 3, 4, 6, [skills.bombardier, skills.dodge, skills.rightStuff, skills.secretWeapon, skills.sideStep, skills.stunty], \"AP\", \"G\"),\n      positional(2, \"Fun-hoppa\", 20000, 6, 1, 3, 5, 6, [skills.dodge, skills.pogoStick, skills.rightStuff, skills.sideStep, skills.stunty], \"A\", \"G\"),\n      positional(2, \"Stilty Runna\", 20000, 6, 1, 3, 5, 6, [skills.dodge, skills.rightStuff, skills.sideStep, skills.sprint, skills.stunty], \"A\", \"G\"),\n      positional(2, \"Pump Wagon\", 105000, 4, 5, 5, null, 9, [skills.dirtyPlayer(1), skills.juggernaut, skills.mightyBlow(1), skills.reallyStupid, skills.secretWeapon, skills.standFirm], \"S\", \"AG\"),\n      positional(2, \"Trained Troll\", 115000, 4, 5, 5, 5, 10, [skills.alwaysHungry, skills.loner(3), skills.mightyBlow(1), skills.projectileVomit, skills.reallyStupid, skills.regeneration, skills.throwTeamMate], \"S\", \"AGP\")\n    ],\n    60000,\n    true,\n    3,\n  ),\n  roster(\n    \"Tomb Kings\",\n    [\n      positional(16, \"Skeleton\", 40000, 5, 3, 4, 6, 8, [skills.regeneration, skills.thickSkull], \"G\", \"AS\"),\n      positional(2, \"Anointed Thrower\", 70000, 6, 3, 4, 3, 8, [skills.pass, skills.regeneration, skills.sureHands, skills.thickSkull], \"GP\", \"A\"),\n      positional(2, \"Anointed Blitzer\", 90000, 6, 3, 4, 6, 9, [skills.block, skills.regeneration, skills.thickSkull], \"GS\", \"AP\"),\n      positional(4, \"Tomb Guardian\", 100000, 4, 5, 5, null, 10, [skills.decay, skills.regeneration], \"S\", \"AG\")\n    ],\n    70000,\n    false,\n    2,\n  ),\n  roster(\n    \"Underworld Denizens\",\n    [\n      positional(12, \"Underworld Goblin\", 40000, 6, 2, 3, 4, 8, [skills.dodge, skills.rightStuff, skills.stunty], \"AM\", \"GS\"),\n      positional(6, \"Underworld Snotling\", 15000, 5, 1, 3, 5, 6, [skills.dodge, skills.rightStuff, skills.sideStep, skills.stunty, skills.swarming, skills.titchy], \"AM\", \"G\"),\n      positional(16, \"Skaven Clanrat\", 50000, 7, 3, 3, 4, 8, [skills.animosity(\"Underworld Goblin Linemen\")], \"GM\", \"AS\"),\n      positional(2, \"Skaven Thrower\", 85000, 7, 3, 3, 2, 8, [skills.animosity(\"Underworld Goblin Linemen\"), skills.pass, skills.sureHands], \"GMP\", \"AS\"),\n      positional(4, \"Gutter Runner\", 85000, 9, 2, 2, 4, 8, [skills.animosity(\"Underworld Goblin Linemen\"), skills.dodge], \"AGM\", \"PS\"),\n      positional(2, \"Skaven Blitzer\", 90000, 7, 3, 3, 5, 9, [skills.animosity(\"Underworld Goblin Linemen\"), skills.block], \"GMS\", \"AP\"),\n      positional(2, \"Underworld Troll\", 115000, 4, 5, 5, 5, 10, [skills.alwaysHungry, skills.loner(4), skills.mightyBlow(1), skills.projectileVomit, skills.reallyStupid, skills.regeneration, skills.throwTeamMate], \"MS\", \"AGP\"),\n      positional(1, \"Mutant Rat Ogre\", 150000, 6, 5, 4, null, 9, [skills.animalSavagery, skills.frenzy, skills.loner(4), skills.mightyBlow(1), skills.prehensileTail], \"MS\", \"AG\")\n    ],\n    70000,\n    true,\n    2,\n  ),\n  roster(\n    \"Vampire\",\n    [\n      positional(12, \"Thrall\", 40000, 6, 3, 3, 5, 8, [], \"G\", \"AS\"),\n      positional(6, \"Vampire\", 110000, 6, 4, 2, 3, 9, [skills.animalSavagery, skills.hypnoticGaze, skills.regeneration], \"AGS\", \"P\")\n    ],\n    70000,\n    true,\n    2,\n  ),\n  roster(\n    \"Wood Elf\",\n    [\n      positional(12, \"Lineman\", 70000, 7, 3, 2, 4, 8, [], \"AG\", \"S\"),\n      positional(2, \"Thrower\", 95000, 7, 3, 2, 2, 8, [skills.pass], \"AGP\", \"S\"),\n      positional(4, \"Catcher\", 90000, 8, 2, 2, 4, 8, [skills.catch, skills.dodge], \"AG\", \"PS\"),\n      positional(2, \"Wardancer\", 125000, 8, 3, 2, 4, 8, [skills.block, skills.dodge, skills.leap], \"AG\", \"PS\"),\n      positional(1, \"Loren Forest Treeman\", 120000, 2, 6, 5, 5, 11, [skills.loner(4), skills.mightyBlow(1), skills.standFirm, skills.strongArm, skills.takeRoot, skills.thickSkull, skills.throwTeamMate], \"S\", \"AG\")\n    ],\n    50000,\n    true,\n    1,\n  ),\n];\n\nexport {rosters, skills};\n","import React, {Component} from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport Tab from \"react-bootstrap/Tab\";\nimport Table from \"react-bootstrap/Table\";\nimport Tabs from \"react-bootstrap/Tabs\";\nimport Form from \"react-bootstrap/Form\";\nimport Modal from \"react-bootstrap/Modal\";\n\nimport {rosters, skills} from \"../data\";\n\n\n// A player in the player list\nconst player = (name, positionNumber, positionName, ma, st, ag, pa, av, skills, value, primaryAccess, secondaryAccess) => {\n  return {\n    name: name,\n    positionNumber: positionNumber,\n    positionName: positionName,\n    ma: ma,\n    st: st,\n    ag: ag,\n    pa: pa,\n    av: av,\n    maMod: 0,\n    stMod: 0,\n    agMod: 0,\n    paMod: 0,\n    avMod: 0,\n    skills: skills || [],\n    primarySkills: [],\n    secondarySkills: [],\n    value: value,\n    primaryAccess: primaryAccess,\n    secondaryAccess: secondaryAccess\n  };\n};\n\n\nclass Team extends Component {\n\n  state = {\n    budget: 1000000,\n    playerAdvancementsCostGold: true,\n    reRollsCostDouble: false,\n    customisePlayerAdvancementCosts: false,\n    costOfPrimarySkill: 20000,\n    costOfSecondarySkill: 40000,\n    costOfAV: 10000,\n    costOfMA: 20000,\n    costOfPA: 20000,\n    costOfAG: 40000,\n    costOfST: 80000,\n    name: \"\",\n    roster: rosters[0],\n    coach: \"\",\n    reRolls: 0,\n    dedicatedFans: 0,\n    assistantCoaches: 0,\n    cheerleaders: 0,\n    apothecary: 0,\n    players: new Array(16).fill(null).map((x) => player()),\n    showPlayerAdvancementModal: false,\n    selectedPlayerNumber: null,\n  }\n\n  setRoster = (rosterIndex) => {\n    // Select a team roster\n    this.setState({\n      roster: rosters[rosterIndex],\n      reRolls: 0,\n      dedicatedFans: 0,\n      assistantCoaches: 0,\n      cheerleaders: 0,\n      apothecary: 0,\n      players: new Array(16).fill(null).map((x) => player())\n    });\n  }\n\n  getReRollsCost = () => {\n    return this.state.reRollsCostDouble ? this.state.roster.reRollsCost * 2 : this.state.roster.reRollsCost;\n  }\n\n  setPlayer = (playerNumber, positionNumber) => {\n    // Set a player in the player list\n    // Note: inputs playerNumber and playerPosition are one-indexed\n    let players = this.state.players;\n    if (positionNumber === 0) {\n      // No position is selected: insert empty player\n      players[playerNumber-1] = player(players[playerNumber-1].name);\n    } else {\n      // Position is selected: insert new player\n      let p = this.state.roster.positionals[positionNumber-1];\n      players[playerNumber-1] = player(players[playerNumber-1].name, positionNumber, p.position, p.ma, p.st, p.ag, p.pa, p.av, p.skills, p.cost, p.primaryAccess, p.secondaryAccess);\n    }\n    this.setState({players: players});\n  }\n\n  setPlayerName = (playerNumber, playerName) => {\n    // Set the name of a player in the player list\n    let players = this.state.players;\n    players[playerNumber-1].name = playerName;\n    this.setState({players: players});\n  }\n\n  getSelectedPlayer = () => {\n    // Get the player selected for advancement\n    if (this.state.showPlayerAdvancementModal && this.state.selectedPlayerNumber) {\n      return this.state.players[this.state.selectedPlayerNumber-1];\n    } else {\n      return null;\n    }\n  }\n\n  setSelectedPlayer = (player) => {\n    // Save player to state at the index of the selected player\n    let players = this.state.players;\n    players[this.state.selectedPlayerNumber-1] = player;\n    this.setState({players: players});\n  }\n\n  renderPlayerSkills = (player) => {\n    // Render player skill list including skill advancements\n    if (player.positionNumber) {\n      let skills = player.skills.map((s) => <span className=\"skill-default\">{s}</span>);\n      skills = skills.concat(player.primarySkills.map((s) => <span className=\"skill-primary\">{s}</span>));\n      skills = skills.concat(player.secondarySkills.map((s) => <span className=\"skill-secondary\">{s}</span>));\n      return <div>{skills.map((s, i) => i > 0 ? <span key={i}>, {s}</span> : <span key={i}>{s}</span>)}</div>;\n    }\n  }\n\n  showPlayerAdvancementModal = (playerNumber) => {\n    // Select player and show player advancement modal\n    this.setState({\n      selectedPlayerNumber: playerNumber,\n      showPlayerAdvancementModal: true\n    });\n  }\n\n  renderPlayerChar = (player, char, interactive) => {\n    if (typeof player[char] !== \"undefined\") {\n      let mod = player[char + \"Mod\"];\n      if([\"ma\", \"st\"].includes(char)) {\n        return <span className={mod && \"text-orange\"}>{player[char] + mod}</span>;\n      } else if (char === \"ag\") {\n        return <span className={mod && \"text-orange\"}>{player[char] - mod + \"+\"}</span>;\n      } else if (char === \"pa\") {\n        if (player[char] !== null) {\n          return <span className={mod && \"text-orange\"}>{player[char] - mod + \"+\"}</span>;\n        } else {\n          return <span>-</span>;\n        }\n      } else if (char === \"av\") {\n        return <span className={mod && \"text-orange\"}>{player[char] + mod + \"+\"}</span>;\n      }\n    }\n  }\n\n  toggleSelectedPlayerChar = (char) => {\n    // Improve or reset a characteristic of the selected player\n    let player = this.getSelectedPlayer();\n    if (this.playerCharMayBeImproved(player, char)) {\n      player[char + \"Mod\"] += 1;\n    } else {\n      player[char + \"Mod\"] = 0;\n    }\n    this.setSelectedPlayer(player);\n  }\n\n  playerCharMayBeImproved = (player, char) => {\n    // Determine if a player characteristic may be improved\n    return !(\n      player[char + \"Mod\"] === 2 ||\n      (char === \"ma\" && player.ma + player.maMod === 9) ||\n      (char === \"st\" && player.st + player.stMod === 8) ||\n      (char === \"ag\" && player.ag - player.agMod === 1) ||\n      (char === \"pa\" && (player.pa === null || player.pa - player.paMod === 1)) ||\n      (char === \"av\" && player.av + player.avMod === 11)\n    );\n  }\n\n  renderSkill = (skill, category) => {\n    // Render a skill in the skill advancement table\n    let player = this.getSelectedPlayer();\n    if (player) {\n      if (player.skills.includes(skill)) {\n        // Selected player has the skill as a starting skill\n        return <span className=\"text-orange\">{skill}</span>;\n      } else if (!player.primaryAccess.includes(category) && !player.secondaryAccess.includes(category)) {\n        // Selected player does not have access to the skill\n        return <span className=\"text-muted\">{skill}</span>;\n      } else if (player.primarySkills.includes(skill) || player.secondarySkills.includes(skill)) {\n        // Selected player has already added the skill\n        return <span className=\"skill-selected\" onClick={() => this.removeSkill(skill)}>{skill}</span>;\n      } else {\n        // Skill is available\n        return <span className=\"skill-available\" onClick={() => this.addSkill(skill, category)}>{skill}</span>;\n      }\n    }\n  }\n\n  addSkill = (skill, category) => {\n    // Add skill to selected player\n    let player = this.getSelectedPlayer();\n    if (player.primaryAccess.includes(category)) {\n      player.primarySkills.push(skill);\n      player.primarySkills.sort();\n    } else if (player.secondaryAccess.includes(category)) {\n      player.secondarySkills.push(skill);\n      player.secondarySkills.sort();\n    }\n    this.setSelectedPlayer(player);\n  }\n\n  removeSkill = (skill) => {\n    // Remove skill from selected player\n    let player = this.getSelectedPlayer();\n    player.primarySkills = player.primarySkills.filter((s) => s !== skill);\n    player.secondarySkills = player.secondarySkills.filter((s) => s !== skill);\n    this.setSelectedPlayer(player);\n  }\n\n  getPlayerValue = (player) => {\n    let value = player.value || 0;\n    if (this.state.playerAdvancementsCostGold) {\n      value += player.primarySkills.length * this.state.costOfPrimarySkill;\n      value += player.secondarySkills.length * this.state.costOfSecondarySkill;\n      value += player.maMod * this.state.costOfMA;\n      value += player.stMod * this.state.costOfST;\n      value += player.agMod * this.state.costOfAG;\n      value += player.paMod * this.state.costOfPA;\n      value += player.avMod * this.state.costOfAV;\n    }\n    return value;\n  }\n\n  getTeamValue = () => {\n    // Compute the current team value\n    let tv = 0;\n    tv += this.state.reRolls * this.getReRollsCost();\n    tv += this.state.dedicatedFans * 10000;\n    tv += this.state.assistantCoaches * 10000;\n    tv += this.state.cheerleaders * 10000;\n    tv += this.state.apothecary * 50000;\n    tv += this.state.players.reduce((total, player) => {return total + this.getPlayerValue(player);}, 0);\n    return tv;\n  }\n\n  getTreasury = () => {\n    // Compute the current treasury value\n    return this.state.budget - this.getTeamValue();\n  }\n\n  formatCost = (x) => {\n    // Format a number into a cost string, example: 10000 -> 10,000 GP\n    return `${x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")} GP`;\n  }\n\n  toggleCustomisePlayerAdvancementCosts = () => {\n    this.setState({\n      customisePlayerAdvancementCosts: !this.state.customisePlayerAdvancementCosts,\n      costOfPrimarySkill: 20000,\n      costOfSecondarySkill: 40000,\n      costOfAV: 10000,\n      costOfMA: 20000,\n      costOfPA: 20000,\n      costOfAG: 40000,\n      costOfST: 80000,\n    });\n  }\n\n  render() {\n    return (\n      <Container>\n\n        <Tabs defaultActiveKey=\"team\">\n          <Tab eventKey=\"team\" title=\"Team\">\n            <Row>\n              <Col md=\"5\">\n                <Table borderless size=\"sm\" className=\"margin-zero team-table-1\">\n                  <tbody>\n                    <tr>\n                      <td>Team Name:</td>\n                      <td><Form.Control type=\"text\" size=\"sm\" value={this.state.name} onChange={(e) => this.setState({name: e.target.value})} /></td>\n                    </tr>\n                    <tr>\n                      <td>Team Roster:</td>\n                      <td>\n                        <Form.Control as=\"select\" size=\"sm\" onChange={(e) => this.setRoster(e.target.value)}>\n                         {rosters.map((roster, i) => {return <option key={i} value={i}>{roster.name}</option>;})}\n                        </Form.Control>\n                      </td>\n                    </tr>\n                    <tr>\n                      <td>Coach:</td>\n                      <td><Form.Control type=\"text\" size=\"sm\" value={this.state.coach} onChange={(e) => this.setState({coach: e.target.value})} /></td>\n                    </tr>\n                    <tr>\n                      <td>Treasury:</td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.getTreasury())} readOnly /></td>\n                    </tr>\n                    <tr>\n                      <td>Team Value:</td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.getTeamValue())} readOnly /></td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n              <Col md=\"7\">\n                <Table borderless size=\"sm\" className=\"margin-zero team-table-2\">\n                  <tbody>\n                    <tr>\n                      <td>Team re-rolls:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" value={this.state.reRolls.toString()} onChange={(e) => this.setState({reRolls: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), 8)})} /></td>\n                      <td>x</td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.getReRollsCost())} readOnly /></td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.state.reRolls * this.getReRollsCost())} readOnly /></td>\n                    </tr>\n                    <tr>\n                      <td>Dedicated Fans:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" value={this.state.dedicatedFans.toString()} onChange={(e) => this.setState({dedicatedFans: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), 99)})} /></td>\n                      <td>x</td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" defaultValue={this.formatCost(10000)} plaintext readOnly /></td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.state.dedicatedFans * 10000)} readOnly /></td>\n                    </tr>\n                    <tr>\n                      <td>Assistant Coaches:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" value={this.state.assistantCoaches.toString()} onChange={(e) => this.setState({assistantCoaches: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), 99)})} /></td>\n                      <td>x</td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" defaultValue={this.formatCost(10000)} plaintext readOnly /></td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.state.assistantCoaches * 10000)} readOnly /></td>\n                    </tr>\n                    <tr>\n                      <td>Cheerleaders:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" value={this.state.cheerleaders.toString()} onChange={(e) => this.setState({cheerleaders: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), 99)})} /></td>\n                      <td>x</td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" defaultValue={this.formatCost(10000)} plaintext readOnly /></td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.state.cheerleaders * 10000)} readOnly /></td>\n                    </tr>\n                    <tr>\n                      <td>Apothecary:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" value={this.state.apothecary.toString()} onChange={(e) => this.setState({apothecary: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), 1)})} readOnly={!this.state.roster.apothecaryAllowed} /></td>\n                      <td>x</td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" defaultValue={this.formatCost(50000)} plaintext readOnly /></td>\n                      <td><Form.Control type=\"text\" size=\"sm\" className=\"text-right\" value={this.formatCost(this.state.apothecary * 50000)} readOnly /></td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </Tab>\n          <Tab eventKey=\"budget\" title=\"Budget\">\n            <Row>\n              <Col md=\"7\">\n                <Table borderless size=\"sm\" className=\"margin-zero budget-table\">\n                  <tbody>\n                    <tr>\n                      <td>Team budget:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.budget.toString()} onChange={(e) => this.setState({budget: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} /></td>\n                      <td>GP</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n              <Col md=\"5\">\n              </Col>\n            </Row>\n            <Row>\n              <Col md=\"7\">\n                <Table borderless size=\"sm\" className=\"margin-zero budget-table\">\n                  <tbody>\n                    <tr>\n                      <td>Player advancements cost gold:</td>\n                      <td><Form.Check inline type=\"checkbox\" defaultChecked={this.state.playerAdvancementsCostGold} onChange={(e) => this.setState({playerAdvancementsCostGold: !this.state.playerAdvancementsCostGold})} /></td>\n                      <td></td>\n                    </tr>\n                    <tr>\n                      <td>Rerolls cost double:</td>\n                      <td><Form.Check inline type=\"checkbox\" defaultChecked={this.state.reRollsCostDouble} onChange={(e) => this.setState({reRollsCostDouble: !this.state.reRollsCostDouble})} /></td>\n                      <td></td>\n                    </tr>\n                    <tr>\n                      <td>Customise cost of player advancements:</td>\n                      <td><Form.Check inline type=\"checkbox\" defaultChecked={this.state.customisePlayerAdvancementCosts} onChange={(e) => this.toggleCustomisePlayerAdvancementCosts()} /></td>\n                      <td></td>\n                    </tr>\n                    <tr>\n                      <td>Cost of primary skill:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.costOfPrimarySkill.toString()} onChange={(e) => this.setState({costOfPrimarySkill: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} readOnly={!this.state.customisePlayerAdvancementCosts} /></td>\n                      <td>GP</td>\n                    </tr>\n                    <tr>\n                      <td>Cost of secondary skill:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.costOfSecondarySkill.toString()} onChange={(e) => this.setState({costOfSecondarySkill: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} readOnly={!this.state.customisePlayerAdvancementCosts} /></td>\n                      <td>GP</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n              <Col md=\"5\">\n                <Table borderless size=\"sm\" className=\"margin-zero budget-table\">\n                  <tbody>\n                    <tr>\n                      <td>Cost of AV:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.costOfAV.toString()} onChange={(e) => this.setState({costOfAV: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} readOnly={!this.state.customisePlayerAdvancementCosts} /></td>\n                      <td>GP</td>\n                    </tr>\n                    <tr>\n                      <td>Cost of MA:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.costOfMA.toString()} onChange={(e) => this.setState({costOfMA: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} readOnly={!this.state.customisePlayerAdvancementCosts} /></td>\n                      <td>GP</td>\n                    </tr>\n                    <tr>\n                      <td>Cost of PA:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.costOfPA.toString()} onChange={(e) => this.setState({costOfPA: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} readOnly={!this.state.customisePlayerAdvancementCosts} /></td>\n                      <td>GP</td>\n                    </tr>\n                    <tr>\n                      <td>Cost of AG:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.costOfAG.toString()} onChange={(e) => this.setState({costOfAG: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} readOnly={!this.state.customisePlayerAdvancementCosts} /></td>\n                      <td>GP</td>\n                    </tr>\n                    <tr>\n                      <td>Cost of ST:</td>\n                      <td><Form.Control type=\"number\" size=\"sm\" className=\"text-right\" value={this.state.costOfST.toString()} onChange={(e) => this.setState({costOfST: e.target.value && Math.min(Math.max(parseInt(e.target.value) || 0, 0), Number.MAX_SAFE_INTEGER)})} readOnly={!this.state.customisePlayerAdvancementCosts} /></td>\n                      <td>GP</td>\n                    </tr>\n                  </tbody>\n                </Table>\n              </Col>\n            </Row>\n          </Tab>\n        </Tabs>\n\n        <Row>\n          <Col>\n            <Table bordered hover size=\"sm\" className=\"player-table table-striped\">\n              <thead>\n                <tr>\n                  <th className=\"text-center\"></th>\n                  <th className=\"text-left\">Name</th>\n                  <th className=\"text-left\">Position</th>\n                  <th className=\"text-center\">MA</th>\n                  <th className=\"text-center\">ST</th>\n                  <th className=\"text-center\">AG</th>\n                  <th className=\"text-center\">PA</th>\n                  <th className=\"text-center\">AV</th>\n                  <th className=\"text-left\">Skills</th>\n                  <th className=\"text-center\">Value</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.players.map((player, i) => {\n                  return (<tr key={i+1}>\n                    <td className=\"player-number\">{i+1}</td>\n                    <td className=\"player-name\"><Form.Control type=\"text\" id={i+1} plaintext value={player.name || \"\"} onChange={(e) => this.setPlayerName(parseInt(e.target.id), e.target.value)} /></td>\n                    <td className=\"player-position\">\n                      <Form.Control as=\"select\" id={i+1} size=\"sm\" plaintext value={player.positionNumber || 0} onChange={(e) => this.setPlayer(parseInt(e.target.id), parseInt(e.target.value))}>\n                        <option key=\"0\" value=\"0\">-</option>\n                        {this.state.roster.positionals.map((p, i) => {return <option key={i+1} value={i+1}>{p.position}</option>;})}\n                      </Form.Control>\n                    </td>\n                    <td className=\"player-ma\" onClick={() => player.positionNumber && this.showPlayerAdvancementModal(i+1)}>{this.renderPlayerChar(player, \"ma\")}</td>\n                    <td className=\"player-st\" onClick={() => player.positionNumber && this.showPlayerAdvancementModal(i+1)}>{this.renderPlayerChar(player, \"st\")}</td>\n                    <td className=\"player-ag\" onClick={() => player.positionNumber && this.showPlayerAdvancementModal(i+1)}>{this.renderPlayerChar(player, \"ag\")}</td>\n                    <td className=\"player-pa\" onClick={() => player.positionNumber && this.showPlayerAdvancementModal(i+1)}>{this.renderPlayerChar(player, \"pa\")}</td>\n                    <td className=\"player-av\" onClick={() => player.positionNumber && this.showPlayerAdvancementModal(i+1)}>{this.renderPlayerChar(player, \"av\")}</td>\n                    <td className=\"player-skills\" onClick={() => player.positionNumber && this.showPlayerAdvancementModal(i+1)}>{this.renderPlayerSkills(player)}</td>\n                    <td className=\"player-value\">{player.value && this.formatCost(this.getPlayerValue(player))}</td>\n                  </tr>);\n                })}\n              </tbody>\n            </Table>\n          </Col>\n        </Row>\n\n        <Modal\n          show={this.state.showPlayerAdvancementModal}\n          onHide={() => this.setState({showPlayerAdvancementModal: false})}\n          animation={true}\n          size=\"lg\"\n          aria-labelledby=\"contained-modal-title-vcenter\"\n          centered\n        >\n          <Modal.Header closeButton>\n            <Modal.Title id=\"contained-modal-title-vcenter\">\n              {this.getSelectedPlayer() && this.getSelectedPlayer().positionName}\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n\n            <Table size=\"sm\" className=\"advancement-table\">\n              <thead>\n                <tr>\n                  <th>MA</th>\n                  <th>ST</th>\n                  <th>AG</th>\n                  <th>PA</th>\n                  <th>AV</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td className=\"cursor-pointer\" onClick={() => this.toggleSelectedPlayerChar(\"ma\")}>\n                    {this.getSelectedPlayer() && this.renderPlayerChar(this.getSelectedPlayer(), \"ma\")}\n                  </td>\n                  <td className=\"cursor-pointer\" onClick={() => this.toggleSelectedPlayerChar(\"st\")}>\n                    {this.getSelectedPlayer() && this.renderPlayerChar(this.getSelectedPlayer(), \"st\")}\n                  </td>\n                  <td className=\"cursor-pointer\" onClick={() => this.toggleSelectedPlayerChar(\"ag\")}>\n                    {this.getSelectedPlayer() && this.renderPlayerChar(this.getSelectedPlayer(), \"ag\")}\n                  </td>\n                  <td className=\"cursor-pointer\" onClick={() => this.toggleSelectedPlayerChar(\"pa\")}>\n                    {this.getSelectedPlayer() && this.renderPlayerChar(this.getSelectedPlayer(), \"pa\")}\n                  </td>\n                  <td className=\"cursor-pointer\" onClick={() => this.toggleSelectedPlayerChar(\"av\")}>\n                    {this.getSelectedPlayer() && this.renderPlayerChar(this.getSelectedPlayer(), \"av\")}\n                  </td>\n                </tr>\n              </tbody>\n            </Table>\n\n            <Table size=\"sm\" className=\"advancement-table\">\n              <thead>\n                <tr>\n                  <th>Primary skill access</th>\n                  <th>Secondary skill access</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                  <td>{this.getSelectedPlayer() && this.getSelectedPlayer().primaryAccess}</td>\n                  <td>{this.getSelectedPlayer() && this.getSelectedPlayer().secondaryAccess}</td>\n                </tr>\n              </tbody>\n            </Table>\n\n            <Table size=\"sm\" className=\"advancement-table table-striped\">\n              <thead>\n                <tr>\n                  <th>Agility</th>\n                  <th>General</th>\n                  <th>Mutations</th>\n                  <th>Passing</th>\n                  <th>Strength</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr><td>{this.renderSkill(skills.catch, \"A\")}</td><td>{this.renderSkill(skills.block, \"G\")}</td><td>{this.renderSkill(skills.bigHand, \"M\")}</td><td>{this.renderSkill(skills.accurate, \"P\")}</td><td>{this.renderSkill(skills.armBar, \"S\")}</td></tr>\n                <tr><td>{this.renderSkill(skills.divingCatch, \"A\")}</td><td>{this.renderSkill(skills.dauntless, \"G\")}</td><td>{this.renderSkill(skills.claws, \"M\")}</td><td>{this.renderSkill(skills.cannoneer, \"P\")}</td><td>{this.renderSkill(skills.brawler, \"S\")}</td></tr>\n                <tr><td>{this.renderSkill(skills.divingTackle, \"A\")}</td><td>{this.renderSkill(skills.dirtyPlayer(1), \"G\")}</td><td>{this.renderSkill(skills.disturbingPresence, \"M\")}</td><td>{this.renderSkill(skills.cloudBurster, \"P\")}</td><td>{this.renderSkill(skills.breakTackle, \"S\")}</td></tr>\n                <tr><td>{this.renderSkill(skills.dodge, \"A\")}</td><td>{this.renderSkill(skills.fend, \"G\")}</td><td>{this.renderSkill(skills.extraArms, \"M\")}</td><td>{this.renderSkill(skills.dumpOff, \"P\")}</td><td>{this.renderSkill(skills.grab, \"S\")}</td></tr>\n                <tr><td>{this.renderSkill(skills.defensive, \"A\")}</td><td>{this.renderSkill(skills.frenzy, \"G\")}</td><td>{this.renderSkill(skills.foulAppearance, \"M\")}</td><td>{this.renderSkill(skills.fumblerooskie, \"P\")}</td><td>{this.renderSkill(skills.guard, \"S\")}</td></tr>\n                <tr><td>{this.renderSkill(skills.jumpUp, \"A\")}</td><td>{this.renderSkill(skills.kick, \"G\")}</td><td>{this.renderSkill(skills.horns, \"M\")}</td><td>{this.renderSkill(skills.hailMaryPass, \"P\")}</td><td>{this.renderSkill(skills.juggernaut, \"S\")}</td></tr>\n                <tr><td>{this.renderSkill(skills.leap, \"A\")}</td><td>{this.renderSkill(skills.pro, \"G\")}</td><td>{this.renderSkill(skills.ironHardSkin, \"M\")}</td><td>{this.renderSkill(skills.leader, \"P\")}</td><td>{this.renderSkill(skills.mightyBlow(1), \"S\")}</td></tr>\n                <tr><td>{this.renderSkill(skills.safePairOfHands, \"A\")}</td><td>{this.renderSkill(skills.shadowing, \"G\")}</td><td>{this.renderSkill(skills.monstrousMouth, \"M\")}</td><td>{this.renderSkill(skills.nervesOfSteel, \"P\")}</td><td>{this.renderSkill(skills.multipleBlock, \"S\")}</td></tr>\n                <tr><td>{this.renderSkill(skills.sideStep, \"A\")}</td><td>{this.renderSkill(skills.stripBall, \"G\")}</td><td>{this.renderSkill(skills.prehensileTail, \"M\")}</td><td>{this.renderSkill(skills.onTheBall, \"P\")}</td><td>{this.renderSkill(skills.pileDriver, \"S\")}</td></tr>\n                <tr><td>{this.renderSkill(skills.sneakyGit, \"A\")}</td><td>{this.renderSkill(skills.sureHands, \"G\")}</td><td>{this.renderSkill(skills.tentacles, \"M\")}</td><td>{this.renderSkill(skills.pass, \"P\")}</td><td>{this.renderSkill(skills.standFirm, \"S\")}</td></tr>\n                <tr><td>{this.renderSkill(skills.sprint, \"A\")}</td><td>{this.renderSkill(skills.tackle, \"G\")}</td><td>{this.renderSkill(skills.twoHeads, \"M\")}</td><td>{this.renderSkill(skills.runningPass, \"P\")}</td><td>{this.renderSkill(skills.strongArm, \"S\")}</td></tr>\n                <tr><td>{this.renderSkill(skills.sureFeet, \"A\")}</td><td>{this.renderSkill(skills.wrestle, \"G\")}</td><td>{this.renderSkill(skills.veryLongLegs, \"M\")}</td><td>{this.renderSkill(skills.safePass, \"P\")}</td><td>{this.renderSkill(skills.thickSkull, \"S\")}</td></tr>\n              </tbody>\n            </Table>\n          </Modal.Body>\n        </Modal>\n\n      </Container>\n    );\n  }\n}\n\n\nexport default Team;\n","import React from \"react\";\n\nimport Container from \"react-bootstrap/Container\";\nimport Row from \"react-bootstrap/Row\";\nimport Col from \"react-bootstrap/Col\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport ReactGA from \"react-ga\";\n\nimport Team from \"./components/Team\";\nimport \"./App.css\";\n\n\nReactGA.initialize(\"UA-191514354-1\");\nReactGA.pageview(window.location.href);\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header>\n        <Container><Row><Col id=\"header\"><span className=\"text-orange\">Nuflheim</span> Team Draft List</Col></Row></Container>\n      </header>\n      <main>\n        <Team />\n      </main>\n      <footer>\n        <Container>\n          <Row>\n            <Col>\n              <p>~ Nuflheim ~</p>\n              <p><small>This is an unofficial and non-commercial fan website.</small></p>\n              <p><small>This website uses <a href=\"https://www.google.com/policies/privacy/partners/\" rel=\"noreferrer\" target=\"_blank\">Google Analytics</a>.</small></p>\n              <p><small>Please report any issues via <a href=\"https://github.com/jonasbusk/nuflheim\" rel=\"noreferrer\" target=\"_blank\">GitHub</a>.</small></p>\n              <p>\n                <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill=\"currentColor\" className=\"bi bi-star-fill\" viewBox=\"0 0 16 16\"><path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"/></svg> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-star-fill\" viewBox=\"0 0 16 16\"><path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"/></svg> <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"12\" height=\"12\" fill=\"currentColor\" className=\"bi bi-star-fill\" viewBox=\"0 0 16 16\"><path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\"/></svg>\n              </p>\n            </Col>\n          </Row>\n        </Container>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won\"t work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let\"s check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It\"s the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can\"t reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}